<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SHSchool.Data</name>
    </assembly>
    <members>
        <member name="T:SHSchool.Data.SHClass">
            <summary>
            班級類別，提供方法用來取得、新增、修改及刪除班級資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHClass.SelectAll">
            <summary>
            取得所有班級列表。
            </summary>
            <returns>List&lt;SHClassRecord&gt;，代表班級物件列表。</returns>
            <seealso cref="T:SHSchool.Data.SHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHClassRecord&gt; records = SHClass.SelectAll();
                
                foreach(SHClassRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHClass.SelectByID(System.String)">
             <summary>
             根據單筆班級編號取得班級物件。
             </summary>
             <param name="ClassID">班級編號</param>
             <returns>SHClassRecord，代表班級物件。</returns>
             <seealso cref="T:SHSchool.Data.SHClassRecord"/>
             <exception cref="T:System.Exception">
             </exception>
             <example>
                 <code>
                 List&lt;SHClassRecord&gt; records = SHClass.SelectAll();
             
                 SHClassRecord record = SHClass.SelectByID(records[(new System.Random()).Next(records.Count - 1)].ID);
            
                   if (record != null)
                      System.Console.WriteLine(record.Name);
                 </code>
             </example>
             <remarks>若是ClassID不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHClass.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆班級編號取得班級物件列表。
            </summary>
            <param name="ClassIDs">多筆班級編號</param>
            <returns>List&lt;SHClassRecord&gt;，代表班級物件。</returns>
            <seealso cref="T:SHSchool.Data.SHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHClassRecord&gt; allrecords = SHClass.SelectAll();
                
                List&lt;string&gt; IDs = new List&lt;string&gt;();
                
                foreach(SHClassRecord record in allrecords)
                    IDs.Add(record.ID);
            
                List&lt;SHClassRecord&gt; records = SHClass.SelectByIDs(IDs);
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHClass.Insert(SHSchool.Data.SHClassRecord)">
            <summary>
            新增單筆班級記錄
            </summary>
            <param name="ClassRecord">班級記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHClassRecord newrecord = new SHClassRecord();
                    newrecord.Name = (new System.Random()).NextDouble().ToString();
                    strng NewID = SHClass.Insert(newrecord)
                    SHClassRecord record = SHClass.SelectByID(NewID);
                    System.Console.Writeln(record.Name);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為課程名稱（Name）。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHClass.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHClassRecord})">
            <summary>
            新增多筆班級記錄
            </summary>
            <param name="ClassRecords">多筆班級記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHClassRecord record = new SHClassRecord();
                    record.Name = (new System.Random()).NextDouble().ToString();
                    List&lt;SHClassRecord&gt; records = new List&lt;SHClassRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = SHClass.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHClass.Update(SHSchool.Data.SHClassRecord)">
            <summary>
            更新單筆班級記錄
            </summary>
            <param name="ClassRecord">班級記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHClassRecord record = SHClass.SelectByID(ClassID);
                record.Name = (new System.Random()).NextDouble().ToString();
                int UpdateCount = SHClass.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHClass.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHClassRecord})">
            <summary>
            更新多筆班級記錄
            </summary>
            <param name="ClassRecords">班級記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHClassRecord record = SHClass.SelectByID(ClassID);
                record.Name = (new System.Random()).NextDouble().ToString();
                List&lt;SHClassRecord&gt; records = new List&lt;SHClassRecord&gt;();
                records.Add(record);
                int UpdateCount = SHClass.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHClass.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHClassRecord})">
            <summary>
            刪除多筆班級記錄
            </summary>
            <param name="ClassRecords">多筆班級記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHClassRecord&gt; records = SHClass.SelectByIDs(ClassIDs);
                  int DeleteCount = SHClass.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHClass.Delete(SHSchool.Data.SHClassRecord)">
            <summary>
            刪除單筆班級記錄
            </summary>
            <param name="ClassRecord">班級記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHClassRecord&gt; record = SHClass.SelectByID(ClassID);
                  int DeleteCount = SHClass.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHClass.Delete(System.String)">
            <summary>
            刪除單筆班級記錄
            </summary>
            <param name="ClassID">班級記錄系統編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHClass.Delete(ClassID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHClass.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆班級記錄
            </summary>
            <param name="ClassIDs">多筆班級記錄系統編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHClass.Delete(ClassIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHProgramPlanRecord">
            <summary>
            課程規劃資訊
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHDemerit">
            <summary>
            學生懲戒類別，提供方法用來取得、新增、修改及刪除學生懲戒資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.SelectAll">
            <summary>
            取得所有學生懲戒記錄物件列表。
            </summary>
            <returns>List&lt;SHDemeritRecord&gt;，代表多筆學生懲戒記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHDemeritRecord&gt; records = SHDemerit.SelectAll();
                
                foreach(SHDemeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            根據條件取得懲戒紀錄列表
            </summary>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">開始時間</param>
            <param name="EndDate">結束時間</param>
            <param name="StartRegisterDate">開始登錄時間</param>
            <param name="EndRegisterDate">結束登錄時間</param>
            <param name="SchoolYears">學年度</param>
            <param name="Semesters">學期</param>
            <returns>List&lt;SHDemeritRecord&gt;，懲戒紀錄物件列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{K12.Data.SchoolYearSemester})">
            <summary>
            根據條件取得懲戒紀錄列表
            </summary>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">發生開始時間</param>
            <param name="EndDate">發生結束時間</param>
            <param name="StartRegisterDate">開始登錄時間</param>
            <param name="EndRegisterDate">結束登錄時間</param>
            <param name="SchoolYears">學年度列表</param>
            <param name="Semesters">學期列表</param>
            <param name="SchoolYearSemesters">學年度學期列表</param>
            <returns>List&lt;SHDemeritRecord&gt;，懲戒紀錄物件列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{K12.Data.SchoolYearSemester})">
            <summary>
            根據條件取得懲戒紀錄列表
            </summary>
            <typeparam name="T">懲戒紀錄型別，繼承至K12.Data.DemeritRecord</typeparam>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">發生開始時間</param>
            <param name="EndDate">發生結束時間</param>
            <param name="StartRegisterDate">開始登錄時間</param>
            <param name="EndRegisterDate">結束登錄時間</param>
            <param name="StartClearDate">開始已銷過時間</param>
            <param name="EndClearDate">結束已銷過時間</param>
            <param name="SchoolYears">學年度列表</param>
            <param name="Semesters">學期列表</param>
            <param name="SchoolYearSemesters">學年度學期列表</param>
            <returns>List&lt;SHDemeritRecord&gt;，懲戒紀錄列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.SelectBySchoolYearAndSemester(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據單筆學生編號、學年度及學期取得學生懲戒記錄物件列表。
            </summary>
            <param name="StudentID">單筆學生編號</param>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度的資料</param>
            <param name="Semester">學期，傳入null代表取得所有學年度的資料</param>
            <returns>List&lt;SHDemeritRecord&gt;，代表多筆學生懲戒記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHDemeritRecord&gt; records = SHDemerit.SelectBySchoolYearAndSemester(StudentID,School,Semester);
                
                foreach(SHDemeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.SelectBySchoolYearAndSemester(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據多筆學生編號、學年度及學期取得學生懲戒記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度的資料</param>
            <param name="Semester">學期，傳入null代表取得所有學年度的資料</param>
            <returns>List&lt;SHDemeritRecord&gt;，代表多筆學生懲戒記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHDemeritRecord&gt; records = SHDemerit.SelectBySchoolYearAndSemester(StudentIDs,School,Semester);
                
                foreach(SHDemeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生懲戒記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;SHDemeritRecord&gt;，代表多筆學生懲戒記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHDemeritRecord&gt; records = SHDemerit.SelectByStudentIDs(StudentIDs);
                
                foreach(SHDemeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.Insert(SHSchool.Data.SHDemeritRecord)">
            <summary>
            新增單筆學生懲戒記錄
            </summary>
            <param name="DemeritRecord">學生懲戒記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHDemeritRecord newrecord = new SHDemeritRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    strng NewID = Demerit.Insert(newrecord)
                    SHDemeritRecord record = SHDemerit.SelectByID(NewID);
                    System.Console.Writeln(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為學生記錄編號（RefStudentID）、學年度（SchoolYear）、學期（Semester）、缺曠日期（OccurDate）。
            </remarks>       
        </member>
        <member name="M:SHSchool.Data.SHDemerit.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHDemeritRecord})">
            <summary>
            新增多筆學生懲戒記錄
            </summary>
            <param name="DemeritRecords">多筆學生懲戒記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHDemeritRecord record = new SHDemeritRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    
                    List&lt;SHDemeritRecord&gt; records = new List&lt;SHDemeritRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = SHDemerit.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.Update(SHSchool.Data.SHDemeritRecord)">
            <summary>
            更新單筆學生懲戒記錄
            </summary>
            <param name="DemeritRecord">學生懲戒記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHDemeritRecord record = SHDemerit.SelectByStudentIDs(StudentIDs)[0];
                record.OccurDate = DateTime.Today;
                int UpdateCount = SHDemerit.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHDemeritRecord})">
            <summary>
            更新多筆學生懲戒記錄
            </summary>
            <param name="DemeritRecords">多筆學生懲戒記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHDemeritRecord record = SHDemerit.SelectByStudentIDs(StudentIDs)[0];
                record.OccurDate = DateTime.Today;
                List&lt;SHDemeritRecord&gt; records = new List&lt;SHDemeritRecord&gt;();
                records.Add(record);
                int UpdateCount = SHDemerit.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.Delete(SHSchool.Data.SHDemeritRecord)">
            <summary>
            刪除單筆學生懲戒記錄
            </summary>
            <param name="DemeritRecord">學生懲戒記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHDemeritRecord&gt; records = SHDemerit.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = SHDemerit.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.Delete(System.String)">
            <summary>
            刪除單筆學生懲戒記錄
            </summary>
            <param name="DemeritID">學生懲戒記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHDemerit.Delete(DemeritID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHDemeritRecord})">
            <summary>
            刪除多筆學生懲戒記錄
            </summary>
            <param name="DermitRecords">多筆學生懲戒記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="!:DermitRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHDemeritRecord&gt; records = SHDemerit.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = SHDemerit.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDemerit.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生懲戒記錄
            </summary>
            <param name="DemeritIDs">多筆學生懲戒記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHDemerit.Delete(DemeritIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHStudentRecord">
            <summary>
            學生資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHStudentRecord.OverrideProgramPlan">
            <summary>
            覆蓋後的課程規劃
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHStudentRecord.ProgramPlan">
            <summary>
            自動判斷所屬課程規劃，若是學生身上有課程規劃，則用學生的，否則取得班級的課程規劃
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHStudentRecord.OverrideScoreCalcRule">
            <summary>
            覆蓋後的成績計算規則
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHStudentRecord.ScoreCalcRule">
            <summary>
            自動判斷所屬成績計算規則，若是學生身上有成績計算規則，則用學生的，否則取得班級的課程規劃
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHStudentRecord.OverrideDepartmentID">
            <summary>
            學生身上覆蓋後的科別編號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHStudentRecord.OverrideDepartment">
            <summary>
            學生身上覆蓋後的科別
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHStudentRecord.Department">
            <summary>
            自動判斷所屬Department，若是學生身上有OverrideDepartment，則用學生的，否則取得班級的Department
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHStudentRecord.DepartmentID">
            <summary>
            自動判斷所屬DepartmentID，若是學生身上有OverrideDepartmentID，則用學生的，否則取得班級的RefDepartmentID
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHStudentRecord.Class">
            <summary>
            所屬班級
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHCourse">
            <summary>
            課程類別，提供方法用來取得、新增、修改及刪除課程資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHCourse.SelectAll">
            <summary>
            取得所有課程列表。
            </summary>
            <returns>List&lt;SHCourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHCourseRecord&gt; records = SHCourse.SelectAll();
                
                foreach(SHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.SelectByClass(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{SHSchool.Data.SHClassRecord})">
            <summary>
            根據學年度、學期及班級記錄物件列表取得課程列表。
            </summary>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <param name="ClassRecs">多筆班級記錄物件</param>
            <returns>List&lt;CourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseRecord"/>
            <seealso cref="!:JHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
              <code>
                List&lt;SHCourseRecord&gt; records = SHCourse.SelectByClass(SchoolYear,Semester,ClassRecs);
                
                foreach(SHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
               </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.SelectByClass(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據學年度、學期及班級記錄編號列表取得課程列表。
            </summary>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <param name="ClassIDs">多筆班級記錄編號</param>
            <returns>List&lt;SHCourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
              <code>
                List&lt;SHCourseRecord&gt; records = SHCourse.SelectByClass(SchoolYear,Semester,ClassIDs);
                
                foreach(SHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
               </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.SelectByClass(System.Nullable{System.Int32},System.Nullable{System.Int32},SHSchool.Data.SHClassRecord)">
            <summary>
            根據學年度、學期及班級記錄物件取得課程列表。
            </summary>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <param name="ClassRec">班級記錄物件</param>
            <returns>List&lt;SHCourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
              <code>
                List&lt;SHCourseRecord&gt; records = SHCourse.SelectByClass(SchoolYear,Semester,ClassRec);
                
                foreach(SHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
               </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.SelectByClass(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            根據學年度、學期及班級記錄編號取得課程列表。
            </summary>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <param name="ClassID">班級記錄編號</param>
            <returns>List&lt;CourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
              <code>
                List&lt;SHCourseRecord&gt; records = SHCourse.SelectByClass(SchoolYear,Semester,ClassID);
                
                foreach(SHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
               </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.SelectBySchoolYearAndSemester(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據學年度及學期取得課程列表。
            </summary>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <returns>List&lt;SHCourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
              <code>
                List&lt;SHCourseRecord&gt; records = SHCourse.SelectBySchoolYearAndSemester(SchoolYear,Semester);
                
                foreach(SHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
               </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.SelectBySchoolYearAndSemester(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <example>
                <code>
                  List&lt;SHCourseRecord&gt; records = SHCourse.SelectBySchoolYearAndSemester(SchoolYear,Semester,CourseName);
                
                  foreach(SHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.SelectByID(System.String)">
            <summary>
            根據單筆課程編號取得課程物件。
            </summary>
            <param name="CourseID">課程編號</param>
            <returns>SHCourseRecord，代表課程物件。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHCourseRecord record = SHCourse.SelectByID(CourseID);
                
               if (record != null)
                   System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks>若是CourseID不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆課程編號取得課程物件列表。
            </summary>
            <param name="CourseIDs">多筆課程編號</param>
            <returns>List&lt;SHCourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHCourseRecord&gt; records = SHCourse.SelectByIDs(CourseIDs);
                
                foreach(SHCourseRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.Insert(SHSchool.Data.SHCourseRecord)">
            <example>
                <code>
                    SHCourseRecord record = new SHCourseRecord();
                    record.Name = (new System.Random()).NextDouble().ToString();
                    strng NewID = SHCourse.Insert(record);
                    SHCourseRecord actual = SHCourse.SelectByID(NewID);
                    System.Console.Writeln(actual.Name);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為課程名稱（Name）。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHCourseRecord})">
            <summary>
            新增多筆課程記錄
            </summary>
            <param name="CourseRecords">課程記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHCourseRecord record = new SHCourseRecord();
                    record.Name = (new System.Random()).NextDouble().ToString();
                    List&lt;SHCourseRecord&gt; records = new List&lt;SHCourseRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = SHCourse.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHCourse.Update(SHSchool.Data.SHCourseRecord)">
            <summary>
            更新單筆課程記錄
            </summary>
            <param name="CourseRecord">課程記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHCourseRecord record = SHCourse.SelectByID(CourseID);
                record.Name = (new System.Random()).NextDouble().ToString();
                int UpdateCount = SHCourse.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHCourseRecord})">
            <summary>
            更新多筆課程記錄
            </summary>
            <param name="CourseRecords">課程記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="!:CourseRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
                SHCourseRecord record = SHCourse.SelectByID(CourseID);
                record.Name = (new System.Random()).NextDouble().ToString();
                List&lt;SHCourseRecord&gt; records = new List&lt;SHCourseRecord&gt;();
                records.Add(record);
                int UpdateCount = SHCourse.Update(records);
        </member>
        <member name="M:SHSchool.Data.SHCourse.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHCourseRecord})">
            <summary>
            刪除多筆課程記錄
            </summary>
            <param name="CourseRecords">多筆課程記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHCourseRecord&gt; records = SHCourse.SelectByIDs(CourseIDs);
                  int DeleteCount = SHCourse.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.Delete(SHSchool.Data.SHCourseRecord)">
            <summary>
            刪除單筆課程記錄
            </summary>
            <param name="CourseRecord">課程記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  SHCourseRecord record = SHCourse.SelectByID(CourseID);
                  int DeleteCount = SHCourse.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.Delete(System.String)">
            <summary>
            刪除單筆課程記錄
            </summary>
            <param name="CourseID">課程記錄系統編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHCourse.Delete(CourseID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourse.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆課程記錄
            </summary>
            <param name="CourseIDs">多筆課程記錄系統編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHCourse.Delete(CourseIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>        
        </member>
        <member name="T:SHSchool.Data.SHSCAttend">
            <summary>
            學生修課類別，提供方法用來取得、新增、修改及刪除學生修課資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSCAttend.SelectAll">
            <summary>
            取得所有學生修課列表。
            </summary>
            <returns>List&lt;SHSCAttendRecord&gt;，代表多筆學生修課記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SCAttendRecord&gt; records = SHSCAttend.SelectAll();
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCAttend.Select(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            根據條件取得學生修課列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="CourseIDs">多筆課程編號</param>
            <param name="SCAttendIDs">多筆學生修課列表</param>
            <param name="SchoolYear">學年度</param>
            <param name="Semester">學期</param>
            <returns>List&lt;SHSCAttendRecord&gt;，代表多筆學生修課記錄物件。</returns>
        </member>
        <member name="M:SHSchool.Data.SHSCAttend.SelectByID(System.String)">
            <summary>
            根據單筆學生修課編號取得學生修課列表。
            </summary>
            <param name="SCAttendID">單筆學生修課編號</param>
            <returns>SHSCAttendRecord，代表單筆學生修課記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                SHSCAttendRecord record = SHSCAttend.SelectByID(SCAttendID);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCAttend.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生修課編號取得學生修課列表。
            </summary>
            <param name="SCAttendIDs">多筆學生修課編號</param>
            <returns>List&lt;SHSCAttendRecord&gt;，代表多筆學生修課記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHSCAttendRecord&gt; records = SHSCAttend.SelectByIDs(SCAttendIDs);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCAttend.SelectByStudentIDAndCourseID(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號及多筆課程編號取得學生修課列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="CourseIDs">多筆課程編號</param>
            <returns>List&lt;SCAttendRecord&gt;，代表多筆學生修課記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHSCAttendRecord&gt; records = SHSCAttend.GetByStudentIDsAndCourseIDs(StudentIDs,CourseIDs);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCAttend.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生編號取得學生修課列表。
            </summary>
            <param name="StudentID">單筆學生編號</param>
            <returns>List&lt;SHSCAttendRecord&gt;，代表多筆學生修課記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHSCAttendRecord&gt; records = SHSCAttend.SelectByStudentID(StudentID);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCAttend.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生修課列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;SHSCAttendRecord&gt;，代表多筆學生修課記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHSCAttendRecord&gt; records = SHSCAttend.SelectByStudentIDs(StudentIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:SHSchool.Data.SHSCAttend.Insert(SHSchool.Data.SHSCAttendRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:SHSchool.Data.SHSCAttend.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHSCAttendRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:SHSchool.Data.SHSCAttend.Update(SHSchool.Data.SHSCAttendRecord)">
            <summary>
            更新單筆學生修課記錄
            </summary>
            <param name="SCAttendRecord">學生修課記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCAttend.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHSCAttendRecord})">
            <summary>
            更新多筆學生修課記錄
            </summary>
            <param name="SCAttendRecords">多筆學生修課記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCAttend.Delete(SHSchool.Data.SHSCAttendRecord)">
            <summary>
            刪除單筆學生修課記錄
            </summary>
            <param name="SCAttendRecord">學生修課記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCAttend.Delete(System.String)">
            <summary>
            刪除單筆學生修課記錄
            </summary>
            <param name="SCAttendID">學生修課編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCAttend.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHSCAttendRecord})">
            <summary>
            刪除多筆學生修課記錄
            </summary>
            <param name="SCAttendRecords">多筆學生修課記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.SCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCAttend.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生修課記錄
            </summary>
            <param name="SCAttendIDs">多筆學生修課編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:SHSchool.Data.SHExam">
            <summary>
            試別項目類別，提供方法用來取得、新增、修改及刪除試別項目資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHExam.SelectAll">
            <summary>
            取得所有考試項目列表。
            </summary>
            <returns>List&lt;SHExamRecord&gt;，代表多筆考試項目記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHExamRecord&gt; records = SHExam.SelectAll();
            </example>
        </member>
        <member name="M:SHSchool.Data.SHExam.SelectByID(System.String)">
            <summary>
            根據單筆考試項目編號取得考試項目。
            </summary>
            <param name="ExamID">單筆考試項目編號</param>
            <returns>SHExamRecord，代表單筆考試項目記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                SHExamRecord record = SHExam.SelectByID(ExamID);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHExam.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆考試項目編號取得考試項目列表。
            </summary>
            <param name="ExamIDs">多筆考試項目編號</param>
            <returns>List&lt;SHExamRecord&gt;，代表多筆考試項目記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHExamRecord&gt; records = SHExam.SelectByIDs(ExamIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:SHSchool.Data.SHExam.Insert(SHSchool.Data.SHExamRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:SHSchool.Data.SHExam.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHExamRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:SHSchool.Data.SHExam.Update(SHSchool.Data.SHExamRecord)">
            <summary>
            更新單筆考試項目記錄
            </summary>
            <param name="ExamRecord">考試項目記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHExam.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHExamRecord})">
            <summary>
            更新多筆考試項目記錄
            </summary>
            <param name="ExamRecords">多筆考試項目記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHExam.Delete(SHSchool.Data.SHExamRecord)">
            <summary>
            刪除單筆考試項目記錄
            </summary>
            <param name="ExamRecord">考試項目記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHExam.Delete(System.String)">
            <summary>
            刪除單筆考試項目記錄
            </summary>
            <param name="ExamRecordID">考試項目記錄編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHExam.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHExamRecord})">
            <summary>
            刪除多筆考試項目記錄
            </summary>
            <param name="ExamRecords">多筆考試項目記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.ExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHExam.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆考試項目記錄
            </summary>
            <param name="ExamRecordIDs">多筆考試項目記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:SHSchool.Data.SHMoralScoreRecord">
            <summary>
            學期德行評量資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHMoralScoreRecord.Diff">
            <summary>
            導師加減分
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHMoralScoreRecord.Comment">
            <summary>
            導師評語
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHMoralScoreRecord.OtherDiff">
            <summary>
            其他加減分
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHMoralScoreRecord.Student">
            <summary>
            所屬學生物件
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHTCInstructRecord">
            <summary>
            教師教授課程資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHTCInstructRecord.Teacher">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHTCInstructRecord.Course">
            <summary>
            所屬課程
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHStudentTag">
            <summary>
            學生標籤類別，提供方法用來取得、新增、修改及刪除學生標籤資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHStudentTag.SelectAll">
            <summary>
            取得所有學生標籤列表。
            </summary>
            <returns>List&lt;SHStudentTagRecord&gt;，代表多筆學生標籤物件。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHStudentTagRecord&gt; records = SHStudentTag.SelectAll();
                    
                    foreach(SHStudentTagRecord record in records)
                        System.Console.WriteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHStudentTag.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生編號取得學生標籤列表。
            </summary>
            <param name="StudentID">學生編號</param>
            <returns>List&lt;SHStudentTagRecord&gt;，代表多筆學生標籤物件。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHStudentTagRecord&gt; records = SHStudentTag.SelectByStudentID(StudentID);
                    
                    foreach(SHStudentTagRecord record in records)
                      System.Console.WriteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHStudentTag.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生標籤列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;SHStudentTagRecord&gt;，代表多筆學生標籤物件。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHStudentTagRecord&gt; records = SHStudentTag.SelectByStudentIDs(StudentIDs);
                
                forech(SHStudentTagRecord record in records)
                    System.Console.WriteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHStudentTag.Insert(SHSchool.Data.SHStudentTagRecord)">
            <summary>
            新增單學生標籤記錄
            </summary>
            <param name="StudentTagRecord">學生標籤記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHStudentTagRecord  record = new SHStudentTagRecord(StudentID, TagConfigID); 
                string NewID = SHStudentTag.Insert(record);  
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為學生編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks> 
        </member>
        <member name="M:SHSchool.Data.SHStudentTag.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentTagRecord})">
            <summary>
            新增多筆學生標籤記錄
            </summary>
            <param name="StudentTagRecords">多筆學生標籤記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHStudentTagRecord record = new SHStudentTagRecord(StudentID, TagConfigID); 
                List&lt;SHStudentTagRecord&gt; records = new List&lt;SHStudentTagRecord&gt;();
                records.Add(record);
                List&lt;string&gt; NewIDs = SHStudentTag.Insert(records);  
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為學生編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudentTag.Update(SHSchool.Data.SHStudentTagRecord)">
            <summary>
            更新單筆學生標籤記錄
            </summary>
            <param name="StudentTagRecord">學生標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHStudentTagRecord&gt; records = SHStudentTag.SelectByStudentID(StudentID);        
                    records[0].RefEntityID = StudentID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = SHStudentTag.Update(record[0]);
                </code>
            </example>
            <remarks>
            1.更新的欄位值只有StudentID及TagConfigID，其它為唯讀欄位。
            2.傳回值為成功更新的筆數。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudentTag.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentTagRecord})">
            <summary>
            更新多筆學生標籤記錄
            </summary>
            <param name="StudentTagRecords">多筆學生標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHStudentTagRecord&gt; records = SHStudentTag.SelectByStudentID(StudentID);        
                    records[0].RefEntityID = StudentID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = SHStudentTag.Update(records);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHStudentTag.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentTagRecord})">
            <summary>
            刪除多筆學生標籤記錄
            </summary>
            <param name="StudentTagRecords">多筆標籤記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHStudentTagRecord&gt; records = SHStudentTag.SelectByStudentID(StudentID);
                    int DeleteCount = StudentTag.Delete(records);
                </code>
            </example>
            <remarks>
            傳回值為成功刪除的筆數。
            </remarks>        
        </member>
        <member name="M:SHSchool.Data.SHStudentTag.Delete(SHSchool.Data.SHStudentTagRecord)">
            <summary>
            刪除單筆學生記錄
            </summary>
            <param name="StudentTagRecord">學生記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="!:JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHStudentTagRecord&gt; records = SHStudentTag.SelectByStudentID(StudentID);
                    int DeleteCount = SHStudentTag.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHPermrecStatusMappingInfo">
            <summary>
            學籍身份對照表記錄物件
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHPermrecStatusMappingInfo.#ctor">
            <summary>
            無參數建構式
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHPermrecStatusMappingInfo.Load(System.Xml.XmlElement)">
            <summary>
            XML參數建構式
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:SHSchool.Data.SHPermrecStatusMappingInfo.Code">
            <summary>
            學籍身份代碼
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHPermrecStatusMappingInfo.Name">
            <summary>
            學籍身份名稱
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHPermrecStatusMappingInfo.TagFullNames">
            <summary>
            學生標籤的完整名稱列表
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHPermrecStatusMappingInfo.TagFullNamesStr">
            <summary>
            學生標籤的完整名稱列表字串
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHPeriodMappingInfo">
            <summary>
            節次對照表資訊，一個物件代表一個節次的假別對照資訊
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHAbsenceMappingInfo">
            <summary>
            假別對照表資訊
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHAssessmentSetupRecord">
            <summary>
            評量設定資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHAssessmentSetupRecord.AllowUpload">
            <summary>
            是否允許上傳成績
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHPhoneRecord">
            <summary>
            學生電話資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHPhoneRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHCourseTagRecord">
            <summary>
            課程標籤資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHCourseTagRecord.Course">
            <summary>
            取得所屬課程
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHUpdateCodeMapping">
            <summary>
            異動代號對照表類別，提供方法用來取得異動代碼對照表
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHUpdateCodeMapping.SelectAll">
            <summary>
            取得所有異動代碼對照表記錄物件
            </summary>
            <returns>List&lt;SHUpdateCodeMappingInfo&gt;，異動代碼對照表記錄物件列表。</returns>
        </member>
        <member name="M:SHSchool.Data.SHUpdateCodeMapping.SelectByCode(System.String)">
            <summary>
            根據異動記錄代碼取得對應的異動代碼對照表記錄物件
            </summary>
            <param name="UpdateCode">異動代碼</param>
            <returns>SHUpdateCodeMappingInfo，異動代碼對照表記錄物件</returns>
        </member>
        <member name="T:SHSchool.Data.SHBeforeEnrollmentRecord">
            <summary>
            入學前資訊
            詳細規格：https://docs.google.com/a/ischool.com.tw/View?id=dcw7gq95_29ff6fpfhd
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHBeforeEnrollmentRecord.Student">
            <summary>
            所屬學生記錄物件
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHBeforeEnrollmentRecord.GraduateSchoolYear">
            <summary>
            國中畢業學年度
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHMoralScoreCalcRule">
            <summary>
            德行成績計算規則類別，提供方法用來取得及修改德行成績計算規則資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHMoralScoreCalcRule.Select">
            <summary>
            取得德行成績計算規則記錄物件，一個學校只會有一組設定。
            </summary>
            <returns></returns>
        </member>
        <member name="M:SHSchool.Data.SHMoralScoreCalcRule.Select``1">
            <summary>
            取得德行成績計算規則記錄物件，一個學校只會有一組設定。
            </summary>
            <typeparam name="T">德行成績計算規則記錄型別</typeparam>
            <returns></returns>
        </member>
        <member name="M:SHSchool.Data.SHMoralScoreCalcRule.Update(SHSchool.Data.SHMoralScoreCalcRuleRecord)">
            <summary>
            更新德行成績計算規則記錄物件
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:SHSchool.Data.SHMoralScoreCalcRule.Update``1(``0)">
            <summary>
            更新德行成績計算規則記錄物件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="T:SHSchool.Data.SHGradScoreRecord">
            <summary>
            學生畢業成績資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHGradScoreRecord.#ctor">
            <summary>
            預設建構式
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHGradScoreRecord.#ctor(System.Xml.XmlElement)">
            <summary>
            XML參數建構式
            <![CDATA[
            ]]>
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:SHSchool.Data.SHGradScoreRecord.Load(System.Xml.XmlElement)">
            <summary>
            從XML載入設定值
            <![CDATA[
            ]]>
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:SHSchool.Data.SHGradScoreRecord.RefStudentID">
            <summary>
            所屬學生編號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHGradScoreRecord.Entries">
            <summary>
            畢業分項成績
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHGradScoreRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:SHSchool.Data.GradEntryScore">
            <summary>
            畢業分項成績
            </summary>
        </member>
        <member name="M:SHSchool.Data.GradEntryScore.#ctor(System.Xml.XmlElement)">
            <summary>
            XML參數建構式
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:SHSchool.Data.GradEntryScore.#ctor(System.String)">
            <summary>
            建構式，傳入預設領域名稱
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:SHSchool.Data.GradEntryScore.Clone">
            <summary>
            複製畢業成績物件
            </summary>
            <returns></returns>
        </member>
        <member name="P:SHSchool.Data.GradEntryScore.Entry">
            <summary>
            分項名稱
            </summary>
        </member>
        <member name="P:SHSchool.Data.GradEntryScore.Score">
            <summary>
            成績
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHPeriodMapping">
            <summary>
            節次對照表類別，提供方法用來取得節次對照資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHPeriodMapping.SelectAll">
            <summary>
            取得所有節次對照表清單
            </summary>
            <returns>List&lt;SHPeriodMappingInfo&gt;，代表節次對照資訊物件列表。</returns>
        </member>
        <member name="T:SHSchool.Data.SHStudent">
            <summary>
            學生類別，提供方法用來取得、新增、修改及刪除學生資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHStudent.SelectAll">
            <summary>
            取得所有學生記錄列表。
            </summary>
            <returns>List&lt;SHStudentRecord&gt;，代表多筆學生記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHStudentRecord&gt; records = SHStudent.SelectAll();
                
                foreach(SHStudentRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.SelectByClass(SHSchool.Data.SHClassRecord)">
            <summary>
            根據班級記錄物件取得學生記錄編號列表。
            </summary>
            <param name="ClassRec">班級記錄物件</param>
            <returns>List&lt;SHStudentRecord&gt;，代表多筆學生記錄物件。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHStudentRecord&gt; records = SHStudent.SelectByClass(ClassRec);
                
                foreach(SHStudentRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.SelectByClassID(System.String)">
            <summary>
            根據班級編號取得學生記錄編號列表。
            </summary>
            <param name="ClassID">班級編號</param>
            <returns>List&lt;SHStudentRecord&gt;，代表多筆學生記錄物件。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHStudentRecord&gt; records = SHStudent.SelectByClassID(ClassID);
                
                foreach(SHStudentRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.SelectByClasses(System.Collections.Generic.IEnumerable{SHSchool.Data.SHClassRecord})">
            <summary>
            根據多筆班級記錄物件取得學生記錄編號列表。
            </summary>
            <param name="ClassRecs">多筆班級記錄物件</param>
            <returns>List&lt;SHStudentRecord&gt;，代表多筆學生記錄物件。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHStudentRecord&gt; records = SHStudent.SelectByClasses(ClassRecs);
                
                foreach(SHStudentRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.SelectByClassIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆班級編號取得學生記錄編號列表。
            </summary>
            <param name="ClassIDs">多筆班級編號</param>
            <returns>List&lt;SHStudentRecord&gt;，代表多筆學生記錄物件。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHStudentRecord&gt; records = SHStudent.SelectByClassIDs(ClassIDs);
                
                foreach(SHStudentRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.SelectByID(System.String)">
            <summary>
            根據單筆學生編號取得學生記錄。
            </summary>
            <param name="StudentID">學生編號</param>
            <returns>SHStudentRecord，代表學生記錄物件</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHStudentRecord record = SHStudent.SelectByID(StudentID);
                
                if (record != null)
                    System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks>若是StudentID不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生記錄列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;SHStudentRecord&gt;，代表多筆學生記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHStudentRecord&gt; records = SHStudent.SelectByIDs(CourseIDs);
                
                foreach(SHStudentRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.Insert(SHSchool.Data.SHStudentRecord)">
            <summary>
            新增單筆學生記錄
            </summary>
            <param name="StudentRecord">學生記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHStudentRecord newrecord = new SHStudentRecord();
                    newrecord.Name = (new System.Random()).NextDouble().ToString();
                    newrecord.Gender = "男";
                    strng NewID = SHStudent.Insert(newrecord)
                    StudentRecord record = SHStudent.SelectByID(NewID);
                    System.Console.Writeln(record.Name);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為課程名稱（Name）。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord})">
            <summary>
            新增多筆學生記錄
            </summary>
            <param name="StudentRecords">多筆班級記錄物件</param>
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHStudentRecord record = new SHStudentRecord();
                    record.Name = (new System.Random()).NextDouble().ToString();
                    List&lt;SHStudentRecord&gt; records = new List&lt;SHStudentRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = SHStudent.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHStudent.Update(SHSchool.Data.SHStudentRecord)">
            <summary>
            更新單筆學生記錄
            </summary>
            <param name="StudentRecord">學生記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHStudentRecord record = SHStudent.SelectByID(StudentID);
                record.Name = (new System.Random()).NextDouble().ToString();
                int UpdateCount = SHStudent.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord})">
            <summary>
            更新多筆學生記錄
            </summary>
            <param name="StudentRecords">多筆學生記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHStudentRecord record = SHStudent.SelectByID(StudentID);
                record.Name = (new System.Random()).NextDouble().ToString();
                List&lt;SHStudentRecord&gt; records = new List&lt;SHStudentRecord&gt;();
                records.Add(record);
                int UpdateCount = SHStudent.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord})">
            <summary>
            刪除多筆學生記錄
            </summary>
            <param name="StudentRecords">多筆學生記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHStudentRecord&gt; records = SHStudent.SelectByIDs(StudentIDs);
                  int DeleteCount = Student.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.Delete(SHSchool.Data.SHStudentRecord)">
            <summary>
            刪除單筆學生記錄
            </summary>
            <param name="StudentRecord">學生記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  SHStudentRecord record = SHStudent.SelectByID(StudentID);
                  int DeleteCount = SHStudent.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.Delete(System.String)">
            <summary>
            刪除單筆學生記錄
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHStudent.Delete(StudentID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHStudent.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生標籤記錄
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHStudent.Delete(StudentIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHSemesterScoreRecord">
            <summary>
            學生學期成績資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScoreRecord.#ctor">
            <summary>
            無參數建構式，會將學期科目成績明細初始化
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScoreRecord.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            新增學生學期成績記錄建構式，參數為新增記錄的必填欄位
            </summary>
            <param name="RefStudentID">所屬學生編號</param>
            <param name="SchoolYear">學年度</param>
            <param name="Semester">學期</param>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScoreRecord.#ctor(System.Xml.XmlElement)">
            <summary>
            XML參數建構式
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScoreRecord.Load(System.Xml.XmlElement)">
            <summary>
            用XML參數載入資料
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:SHSchool.Data.SHSemesterScoreRecord.Subjects">
            <summary>
            學期科目成績明細
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterScoreRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHSubjectScore">
            <summary>
            科目成績
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSubjectScore.#ctor">
            <summary>
            無參數建構式
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSubjectScore.#ctor(System.Xml.XmlElement)">
            <summary>
            XML參數建構式
            </summary>
            <param name="subject"></param>
        </member>
        <member name="M:SHSchool.Data.SHSubjectScore.Load(System.Xml.XmlElement)">
            <summary>
            從XML載入資料
            <![CDATA[
            ]]>
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:SHSchool.Data.SHSubjectScore.ToXML">
            <summary>
            將資料匯出成XML格式
            <![CDATA[
            ]]>
            </summary>
            <returns></returns>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.RefSemesterScoreID">
            <summary>
            所屬學期成績編號，此為唯讀屬性。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.RefStudentID">
            <summary>
            所屬學生編號，此為唯讀屬性。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.SchoolYear">
            <summary>
            學年度，此為唯讀屬性。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.Semester">
            <summary>
            學期，此為唯讀屬性。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.Subject">
            <summary>
            科目名稱
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.Credit">
            <summary>
            學分數
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.Required">
            <summary>
            必俢
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.Level">
            <summary>
            級別，代表單一科目，但是會分散在多個學期修習的情況，例如國文一、國文二。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.RequiredBy">
            <summary>
            部/校訂
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.NotIncludedInCredit">
            <summary>
            不計入學分
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.NotIncludedInCalc">
            <summary>
            不計分
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.Entry">
            <summary>
            開課分項類別
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.Score">
            <summary>
            百分比成績
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.ScoreSchoolYearAdjust">
            <summary>
            學年調整成績
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.ScoreBetter">
            <summary>
            擇優採計成績
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.ScoreReExam">
            <summary>
            補考成績
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.ScoreReCourse">
            <summary>
            重修成績
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.Pass">
            <summary>
            是否取得學分
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectScore.Comment">
            <summary>
            註解
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHSemesterScore">
            <summary>
            學生學期成績類別，提供方法用來取得、新增、修改及刪除學生學期成績資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.SelectAllSubjectScore">
            <summary>
            取得所有科目成績
            </summary>
            <returns></returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.SelectAll">
            <summary>
            取得所有學生學期成績記錄物件。
            </summary>
            <returns>List&lt;SHSemesterScoreRecord&gt;</returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.SelectByStudentID(System.String)">
            <summary>
            根據學生系統編號取得學期科目成績（預設過濾重讀）
            </summary>
            <param name="StudentID">學生系統編號</param>
            <returns>學期科目成績列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.SelectByStudentID(System.String,System.Boolean)">
            <summary>
            根據學生系統編號取得學期科目成績（預設過濾重讀）
            </summary>
            <param name="StudentID">學生系統編號</param>
            <param name="FilterRepeat">是否過濾重讀</param>
            <returns>學期科目成績列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.SelectByStudent(SHSchool.Data.SHStudentRecord)">
            <summary>
            根據學生記錄物件取得學期科目成績（預設過濾重讀）
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>學期科目成績列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.SelectByStudent(K12.Data.StudentRecord)">
            <summary>
            根據學生記錄物件取得學期科目成績（預設過濾重讀）
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>學期科目成績列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.SelectByStudent(SHSchool.Data.SHStudentRecord,System.Boolean)">
            <summary>
            根據學生記錄物件取得學期科目成績（預設過濾重讀）
            </summary>
            <param name="Student">學生記錄物件</param>
            <param name="FilterRepeat">是否過濾重讀</param>
            <returns>學期科目成績列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.SelectByStudents(System.Collections.Generic.IEnumerable{K12.Data.StudentRecord})">
            <summary>
            根據學生記錄列表取得學期科目成績（預設過濾重讀）
            </summary>
            <param name="Students">學生記錄列表</param>
            <returns>學期科目成績列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.SelectByStudents(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord})">
            <summary>
            根據學生記錄列表取得學期科目成績（預設過濾重讀）
            </summary>
            <param name="Students">學生記錄列表</param>
            <returns>學期科目成績列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.SelectByStudents(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord},System.Boolean)">
            <summary>
            根據學生記錄列表取得學期科目成績（預設過濾重讀）
            </summary>
            <param name="Students">學生記錄列表</param>
            <param name="FilterRepeat">是否過濾重讀</param>
            <returns>學期科目成績列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生學期成績列表（預設過濾重讀）。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;SHSemesterScoreRecord&gt;，代表多筆學生學期成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSemesterScoreRecord"/>
            <example>
                <code>
                    List&lt;SHSemesterScoreRecord&gt; records = SHSemesterScore.SelectByStudentIDs(StudentIDs);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            根據多筆學生編號取得學生學期成績列表（預設過濾重讀）。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
             <param name="FilterRepeat">是否過濾重讀</param>
            <returns>List&lt;SHSemesterScoreRecord&gt;，代表多筆學生學期成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSemesterScoreRecord"/>
            <example>
                <code>
                    List&lt;SHSemesterScoreRecord&gt; records = SHSemesterScore.SelectByStudentIDs(StudentIDs);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.Update(SHSchool.Data.SHSemesterScoreRecord)">
            <summary>
            更新單筆學生學期成績記錄
            </summary>
            <param name="SemesterScoreRecord">學生學期成績記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:K12.Data.SemesterScoreRecord"/>
            <example>
                
            </example>
        </member>
        <!-- 忽略成員 "M:SHSchool.Data.SHSemesterScore.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHSemesterScoreRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:SHSchool.Data.SHSemesterScore.Delete(SHSchool.Data.SHSemesterScoreRecord)">
            <summary>
            刪除單筆學生學期成績記錄
            </summary>
            <param name="SemesterScoreRecord">學生學期成績記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHSemesterScoreRecord"/>
            <exception cref="!:Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.Delete(System.String)">
            <summary>
            刪除單筆學生學期成績記錄
            </summary>
            <param name="SemesterScoreID">學生學期成績編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="!:Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHSemesterScoreRecord})">
            <summary>
            刪除多筆學生學期成績記錄
            </summary>
            <param name="SemesterScoreRecords">多筆學生學期成績記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHSemesterScoreRecord"/>
            <exception cref="!:Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSemesterScore.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生學期成績記錄
            </summary>
            <param name="SemesterScoreIDs">多筆學生學期成績編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="!:Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:SHSchool.Data.SHTeacherTagRecord">
            <summary>
            教師標籤資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHTeacherTagRecord.Teacher">
            <summary>
            取得所屬教師
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHStudentTagRecord">
            <summary>
            學生標籤資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHStudentTagRecord.Student">
            <summary>
            取得所屬學生
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHClassTag">
            <summary>
            班級標籤類別，提供方法用來取得、新增、修改及刪除班級標籤資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHClassTag.SelectAll">
            <summary>
            取得所有班級標籤列表。
            </summary>
            <returns>List&lt;SHClassTagRecord&gt;，代表多筆班級標籤物件。</returns>
            <seealso cref="T:SHSchool.Data.SHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHClassTagRecord&gt; records = SHClassTag.SelectAll();
                    
                    foreach(SHClassTagRecord record in records)
                        System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:SHSchool.Data.SHClassTag.SelectByClassID(System.String)">
            <summary>
            根據單筆班級編號取得班級標籤列表。
            </summary>
            <param name="ClassID">班級編號</param>
            <returns>List&lt;SHClassTagRecord&gt;，代表多筆班級標籤物件。</returns>
            <seealso cref="T:SHSchool.Data.SHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHClassTagRecord&gt; records = SHClassTag.SelectByClassID(ClassID);
                    
                    foreach(SHClassTagRecord record in records)
                      System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:SHSchool.Data.SHClassTag.SelectByClassIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆班級編號取得班級標籤列表。
            </summary>
            <param name="ClassIDs">多筆班級編號</param>
            <returns>List&lt;SHClassTagRecord&gt;，代表多筆班級標籤物件。</returns>
            <seealso cref="T:SHSchool.Data.SHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHClassTagRecord&gt; records = SHClassTag.SelectByClassIDs(ClassIDs);
                
                forech(SHClassTagRecord record in records)
                    System.Console.WriteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHClassTag.Insert(SHSchool.Data.SHClassTagRecord)">
            <summary>
            新增單筆班級標籤記錄
            </summary>
            <param name="ClassTagRecord">班級標籤記錄物件</param> 
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHClassTagRecord record = new SHClassTagRecord(ClassID, TagConfigID); 
                string NewID = SHClassTag.Insert(record);  
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為班級編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks> 
        </member>
        <member name="M:SHSchool.Data.SHClassTag.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHClassTagRecord})">
            <summary>
            新增多筆班級標籤記錄
            </summary>
            <param name="ClassTagRecords">多筆班級記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHClassTagRecord record = new SHClassTagRecord(ClassID, TagConfigID); 
                List&lt;SHClassTagRecord&gt; records = new List&lt;SHClassTagRecord&gt;();
                records.Add(record);
                List&lt;string&gt; NewIDs = SHClassTag.Insert(records);  
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為班級編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHClassTag.Update(SHSchool.Data.SHClassTagRecord)">
            <summary>
            更新單筆班級標籤記錄
            </summary>
            <param name="ClassTagRecord">班級標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHClassTagRecord&gt; records = SHClassTag.SelectByClassID(ClassID);        
                    records[0].RefEntityID = ClassID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = SHClassTag.Update(record[0]);
                </code>
            </example>
            <remarks>
            1.更新的欄位值只有ClassID及TagConfigID，其它為唯讀欄位。
            2.傳回值為成功更新的筆數。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHClassTag.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHClassTagRecord})">
            <summary>
            更新多筆班級標籤記錄
            </summary>
            <param name="ClassTagRecords">多筆班級標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHClassTagRecord&gt; records = SHClassTag.SelectByClassID(ClassID);        
                    records[0].RefEntityID = ClassID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = SHClassTag.Update(records);
                </code>
            </example>
            <remarks>
            1.更新的欄位值只有ClassID及TagConfigID，其它為唯讀欄位。
            2.傳回值為成功更新的筆數。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHClassTag.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHClassTagRecord})">
            <summary>
            刪除多筆班級標籤記錄
            </summary>
            <param name="ClassTagRecords">多筆班級標籤記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHClassTagRecord&gt; records = SHClassTag.SelectByClassID(ClassID);
                    int DeleteCount = SHClassTag.Delete(records);
                </code>
            </example>
            <remarks>
            傳回值為成功刪除的筆數。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHClassTag.Delete(SHSchool.Data.SHClassTagRecord)">
            <summary>
            刪除單筆班級記錄
            </summary>
            <param name="ClassTagRecord">班級記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHClassTagRecord&gt; records = SHClassTag.SelectByClassID(ClassID);
                    int DeleteCount = SHClassTag.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>        
        </member>
        <member name="T:SHSchool.Data.SHUpdateRecord">
            <summary>
            學生異動記錄類別，提供方法用來取得、新增、修改及刪除學生異動記錄
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.SelectAll">
            <summary>
            取得所有學生異動記錄列表。
            </summary>
            <returns>List&lt;SHUpdateRecordRecord&gt;，代表多筆學生異動記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHUpdateRecordRecord&gt; records = SHUpdateRecord.SelectAll();
                
                foreach(SHUpdateRecordRecord record in records)
                    Console.WrlteLine(record.StudentName);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生編號取得學生異動記錄列表。
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>List&lt;SHUpdateRecordRecord&gt;，代表多筆學生異動記錄列表。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHUpdateRecordRecord&gt; record = SHUpdateRecord.SelectByStudentID(StudentID);
                
                if (record != null)
                   System.Console.WriteLine(record.StudentName);
                </code>
            </example>
            <remarks>若是StudentID不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.SelectByStudent(SHSchool.Data.SHStudentRecord)">
            <summary>
            根據單筆學生編號取得學生異動記錄列表。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>List&lt;SHUpdateRecordRecord&gt;，代表多筆學生異動記錄列表。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHUpdateRecordRecord&gt; record = SHUpdateRecord.SelectByStudent(Student);
                
                if (record != null)
                   System.Console.WriteLine(record.StudentName);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生異動記錄列表。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;SHUpdateRecordRecord&gt;，代表多筆學生異動記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHUpdateRecordRecord&gt; records = SHUpdateRecord.SelectByStudentIDs(StudentIDs);
                
                foreach(SHUpdateRecordRecord record in records)
                    System.Console.WriteLine(record.StudentName);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.SelectByStudents(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord})">
            <summary>
            根據多筆學生物件取得學生異動記錄列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;SHUpdateRecordRecord&gt;，代表多筆學生異動記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHUpdateRecordRecord&gt; records = SHUpdateRecord.SelectByStudents(Students);
                
                foreach(SHUpdateRecordRecord record in records)
                    System.Console.WriteLine(record.StudentName);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆異動記錄編號取得學生異動記錄列表。
            </summary>
            <param name="IDs">多筆異動記錄編號</param>
            <returns>List&lt;SHUpdateRecordRecord&gt;，代表多筆學生異動記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHUpdateRecordRecord&gt; records = SHUpdateRecord.SelectByIDs(IDs);
                
                foreach(SHUpdateRecordRecord record in records)
                    System.Console.WriteLine(record.StudentName);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.SelectByUpdateCodes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據異動代碼取得學生異動記錄列表。
            </summary>
            <param name="UpdateCodes">多個異動代碼</param>
            <returns>List&lt;SHUpdateRecordRecord&gt;，代表多筆學生異動記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHUpdateRecordRecord&gt; records = SHUpdateRecord.SelectByUpdateCodes(UpdateCodes);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.Insert(SHSchool.Data.SHUpdateRecordRecord)">
            <summary>
            新增單筆學生異動記錄
            </summary>
            <param name="UpdateRecordRecord">學生異動記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHUpdateRecordRecord newrecord = new SHUpdateRecordRecord();
                    newrecord.StudentID = StudentID;
                    newrecord.UpdateDate = "2009/9/9";
                    strng NewID = SHUpdateRecord.Insert(newrecord)
                    SHUpdateRecordRecord record = SHUpdateRecord.SelectByID(NewID);
                    System.Console.Writeln(record.Name);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為學生編號及異動日期。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHUpdateRecordRecord})">
            <summary>
            新增多筆學生異動記錄
            </summary>
            <param name="UpdateRecordRecords">多筆學生異動記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHUpdateRecordRecord record = new SHUpdateRecordRecord();
                    record.StudentID = StudentID;
                    record.UpdateDate = "2009/9/9";
                    List&lt;SHUpdateRecordRecord&gt; records = new List&lt;SHUpdateRecordRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = SHUpdateRecord.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.Update(SHSchool.Data.SHUpdateRecordRecord)">
            <summary>
            更新單筆學生異動記錄
            </summary>
            <param name="UpdateRecordRecord">學生異動記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHUpdateRecordRecord record = SHUpdateRecord.SelectByID(ClassID);
                record.StudentName = (new System.Random()).NextDouble().ToString();
                int UpdateCount = SHUpdateRecord.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHUpdateRecordRecord})">
            <summary>
            更新多筆學生異動記錄
            </summary>
            <param name="UpdateRecordRecords">多筆學生異動記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHUpdateRecordRecord record = SHUpdateRecord.SelectByID(UpdateRecordID);
                record.StudentName = (new System.Random()).NextDouble().ToString();
                List&lt;SHUpdateRecordRecord&gt; records = new List&lt;SHUpdateRecordRecord&gt;();
                records.Add(record);
                int UpdateCount = SHUpdateRecord.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHUpdateRecordRecord})">
            <summary>
            刪除多筆學生異動記錄
            </summary>
            <param name="UpdateRecordRecords">多筆學生異動記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
               <code>
               int DeleteCount = SHUpdateRecord.Delete(UpdateRecordRecords);
               </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生異動記錄
            </summary>
            <param name="UpdateRecordIDs">多筆學生異動記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
               <code>
               int DeleteCount = SHUpdateRecord.Delete(UpdateRecordIDs);
               </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.Delete(SHSchool.Data.SHUpdateRecordRecord)">
            <summary>
            刪除單筆學生異動記錄
            </summary>
            <param name="UpdateRecordRecord">單筆學生異動記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  SHUpdateRecordRecord&gt; record = SHUpdateRecord.SelectByID(UpdateRecordID);
                  int DeleteCount = SHUpdateRecord.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecord.Delete(System.String)">
            <summary>
            刪除單筆學生異動記錄
            </summary>
            <param name="UpdateRecordID">單筆學生異動記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHUpdateRecord.Delete(UpdateRecordID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHSemesterEntryScoreRecord">
            <summary>
            學生學期分項成績資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSemesterEntryScoreRecord.Load(System.Xml.XmlElement)">
            <summary>
            用XML參數載入資料
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.ID">
            <summary>
            系統編號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.RefStudentID">
            <summary>
            所屬學生編號，必填
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.SchoolYear">
            <summary>
            學年度，必填
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.Semester">
            <summary>
            學期，必填
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.GradeYear">
            <summary>
            年級
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.Group">
            <summary>
            分項群組
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.GroupMainScore">
            <summary>
            根據分項群組取得對應的分項成績，若是分項群組為『學習』，則取得『學業』分項成績；若是分項群組為『行為』，則取得『德行』分項成績。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.GroupMainClassRating">
            <summary>
            根據分項群組取得對應的分項班級排名。
            若是分項群組為『學習』，則取得『學業』分項班級排名。
            若是分項群組為『行為』，則取得『德行』分項班級排名。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.GroupYearRating">
            <summary>
            根據分項群組取得對應的分項年級排名。
            若是分項群組為『學習』，則取得『學業』分項年級排名。
            若是分項群組為『行為』，則取得『德行』分項年級排名。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.GroupDeptRating">
            <summary>
            根據分項群組取得對應的分項科排名。
            若是分項群組為『學習』，則取得『學業』分項科排名。
            若是分項群組為『行為』，則取得『德行』分項科排名。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.Scores">
            <summary>
            分項成績
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.ClassRating">
            <summary>
            班級排名
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.YearRating">
            <summary>
            年級排名
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterEntryScoreRecord.DeptRating">
            <summary>
            科排名
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHDemeritRecord">
            <summary>
            學生懲戒資訊，新增物件時會直接將MeritFlag屬性設為0
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHDemeritRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHDisciplineRecord">
            <summary>
            學生獎懲資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHDisciplineRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHAEInclude">
            <summary>
            評分樣板類別，提供方法用來取得、新增、修改及刪除評分樣板資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHAEInclude.SelectAll">
            <summary>
            取得所有評分樣板列表。
            </summary>
            <returns>List&lt;SHAEIncludeRecord&gt;，代表多筆評分樣板記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHAEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHAEIncludeRecord&gt; records = SHAEInclude.SelectAll();
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAEInclude.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆評分樣板編號取得評分樣板列表。
            </summary>
            <param name="AEIncludeIDs">多筆評分樣板編號</param>
            <returns>List&lt;SHAEIncludeRecord&gt;，代表多筆評分樣板記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHAEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHAEIncludeRecord&gt; records = SHAEInclude.SelectByIDs(AEIncludeIDs);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAEInclude.SelectByAssessmentSetupID(System.String)">
            <summary>
            根據單筆評量設定編號取得評分樣板列表。
            </summary>
            <param name="AssessmentSetupID">單筆評量設定編號</param>
            <returns>List&lt;AEIncludeRecord&gt;，代表多筆評分樣板記錄物件。</returns>
            <seealso cref="T:K12.Data.AEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;AEIncludeRecord&gt; aeincluderecords = AEInclude.SelectByIDs(AEIncludeIDs);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAEInclude.SelectByAssessmentSetupIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆單筆評量設定編號取得評分樣板列表。
            </summary>
            <param name="AssessmentSetupIDs">多筆評量設定編號</param>
            <returns>List&lt;AEIncludeRecord&gt;，代表多筆評分樣板記錄物件。</returns>
            <seealso cref="T:K12.Data.AEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;AEIncludeRecord&gt; aeincluderecords = AEInclude.SelectByIDs(AEIncludeIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:SHSchool.Data.SHAEInclude.Insert(SHSchool.Data.SHAEIncludeRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:SHSchool.Data.SHAEInclude.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHAEIncludeRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:SHSchool.Data.SHAEInclude.Update(SHSchool.Data.SHAEIncludeRecord)">
            <summary>
            更新單筆評分樣板記錄
            </summary>
            <param name="AEIncludeRecord">評分樣板記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHAEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAEInclude.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHAEIncludeRecord})">
            <summary>
            更新多筆評分樣板記錄
            </summary>
            <param name="AEIncludeRecords">多筆評分樣板記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHAEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAEInclude.Delete(SHSchool.Data.SHAEIncludeRecord)">
            <summary>
            刪除單筆評分樣板記錄
            </summary>
            <param name="AEIncludeRecord">評分樣板記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHAEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAEInclude.Delete(System.String)">
            <summary>
            刪除單筆評分樣板記錄
            </summary>
            <param name="AEIncludeRecordID">評分樣板記錄編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAEInclude.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHAEIncludeRecord})">
            <summary>
            刪除多筆評分樣板記錄
            </summary>
            <param name="AEIncludeRecords">多筆評分樣板記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHAEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAEInclude.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆評分樣板記錄
            </summary>
            <param name="AEIncludeRecordIDs">多筆評分樣板記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:SHSchool.Data.SHParentRecord">
            <summary>
            家長及監護人資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHParentRecord.Student">
            <summary>
            所屬學生記錄物件
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHParent">
            <summary>
            學生家長及監護人類別，提供方法用來取得及修改學生家長及監護人資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHParent.SelectAll">
            <summary>
            取得所有學生家長及監護人記錄物件列表。
            </summary>
            <returns>List&lt;SHParentRecord&gt;，代表多筆學生家長及監護人記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHParentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHParentRecord&gt; records = SHParent.SelectAll();
                
                foreach(SHParentRecord record in records)
                    Console.WrlteLine(record.Mother.Name);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHParent.SelectByStudent(SHSchool.Data.SHStudentRecord)">
            <summary>
            根據單筆學生記錄物件取得學生家長及監護人記錄物件。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>SHParentRecord，代表學生家長及監人記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <seealso cref="T:SHSchool.Data.SHParentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHPaerntRecord record = SHParent.SelectByStudent(Student);
                
               if (record != null)
                   System.Console.WriteLine(record.Mother.Name);
                </code>
            </example>
            <remarks>若是Student不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHParent.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生記錄編號取得學生家長及監護人記錄物件。
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>SHParentRecord，代表學生家長及監護人記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHParentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHParentRecord record = SHParent.SelectByStudent(StudentID);
                
                if (record != null)
                   System.Console.WriteLine(record.Mother.Name);
                </code>
            </example>
            <remarks>若是StudentID不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHParent.SelectByStudents(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord})">
            <summary>
            根據多筆學生記錄物件取得學生家長及監護人記錄物件列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;SHParentRecord&gt;，代表多筆學生家長及監護人記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHParentRecord"/>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHParentRecord&gt; records = SHParent.SelectByStudents(Students);
                
                foreach(SHParentRecord record in records)
                    Console.WrlteLine(record.Mother.Name);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHParent.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生記錄編號取得學生家長及監護人記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;SHParentRecord&gt;，代表多筆學生家長及監護人記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHParentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHParentRecord&gt; records = SHParent.SelectByStudentIDs(StudentIDs);
                
                foreach(SHParentRecord record in records)
                    Console.WrlteLine(record.Mother.Name);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHParent.Update(SHSchool.Data.SHParentRecord)">
            <summary>
            更新單筆家長及監護人記錄
            </summary>
            <param name="ParentRecord">家長及監護人記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHParentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHParentRecord record = SHParent.SelectByStudentID(StudentID);
                record.Mother.Name = (new System.Random()).NextDouble().ToString();
                int UpdateCount = SHParent.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHParent.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHParentRecord})">
            <summary>
            更新多筆家長及監護人記錄
            </summary>
            <param name="ParentRecords">多筆家長及監護人記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHParentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHParentRecord record = SHParent.SelectByStudentID(StudentID);
                record.Mother.Name = (new System.Random()).NextDouble().ToString();
                List&lt;SHParentRecord&gt; records = new List&lt;SHParentRecord&gt;();
                records.Add(record);
                int UpdateCount = SHParent.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHLeaveInfo">
            <summary>
            學生離校資訊類別，提供方法用來取得及修改學生地址資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHLeaveInfo.SelectAll">
            <summary>
            取得所有學生離校資訊物件列表。
            </summary>
            <returns>List&lt;SHLeaveInfoRecord&gt;，代表多筆學生離校資訊物件。</returns>
            <seealso cref="T:SHSchool.Data.SHLeaveInfoRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHLeaveInfoRecord&gt; records = SHLeaveInfo.SelectAll();
                
                foreach(SHLeaveInfoRecord record in records)
                    Console.WrlteLine(record.Reason);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHLeaveInfo.SelectByStudent(SHSchool.Data.SHStudentRecord)">
            <summary>
            根據單筆學生記錄物件取得學生離校資訊物件。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>SHLeaveInfoRecord，代表學生離校資訊物件。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <seealso cref="T:SHSchool.Data.SHLeaveInfoRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHLeaveInfoRecord record = SHLeaveInfo.SelectByStudent(Student);
                
               if (record != null)
                   System.Console.WriteLine(record.Reason);
                </code>
            </example>
            <remarks>若是Student不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHLeaveInfo.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生記錄編號取得學生離校資訊物件。
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>SHLeaveInfoRecord，代表學生離校資訊物件。</returns>
            <seealso cref="T:SHSchool.Data.SHLeaveInfoRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHLeaveInfoRecord record = SHLeaveInfo.SelectByStudentID(StudentID);
                
                if (record != null)
                   System.Console.WriteLine(record.Reason);
                </code>
            </example>
            <remarks>若是StudentID不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHLeaveInfo.SelectByStudents(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord})">
            <summary>
            根據多筆學生記錄物件取得學生離校資訊物件列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;SHLeaveInfoRecord&gt;，代表多筆學生離校資訊物件。</returns>
            <seealso cref="T:SHSchool.Data.SHLeaveInfoRecord"/>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHLeaveInfoRecord&gt; records = SHLeaveInfo.SelectByStudents(Students);
                
                foreach(SHLeaveInfoRecord record in records)
                    Console.WrlteLine(record.Reason);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHLeaveInfo.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生記錄編號取得學生離校資訊物件列表。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;SHLeaveInfoRecord&gt;，代表多筆學生離校資訊物件。</returns>
            <seealso cref="T:SHSchool.Data.SHLeaveInfoRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHLeaveInfoRecord&gt; records = SHLeaveInfo.SelectByStudentIDs(StudentIDs);
                
                foreach(SHLeaveInfoRecord record in records)
                    Console.WrlteLine(record.Reason);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHLeaveInfo.Update(SHSchool.Data.SHLeaveInfoRecord)">
            <summary>
            更新單筆學生離校資訊
            </summary>
            <param name="LeaveInfoRecord">學生離校資訊物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHLeaveInfoRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHLeaveInfoRecord record = SHLeaveInfo.SelectByStudentID(StudentID);
                record.Reason = (new System.Random()).NextDouble().ToString();
                int UpdateCount = SHLeaveInfo.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHLeaveInfo.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHLeaveInfoRecord})">
            <summary>
            更新多筆學生離校資訊
            </summary>
            <param name="LeaveInfoRecords">多筆學生離校資訊物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHLeaveInfoRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHLeaveInfoRecord record = SHLeaveInfo.SelectByStudentID(StudentID);
                record.Reason = (new System.Random()).NextDouble().ToString();
                List&lt;SHLeaveInfoRecord&gt; records = new List&lt;SHLeaveInfoRecord&gt;();
                records.Add(record);
                int UpdateCount = SHLeaveInfo.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHTagConfig">
            <summary>
            標籤設定類別，提供方法用來取得、新增、修改及刪除標籤設定
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.SelectAll">
            <summary>
            取得所有標籤設定列表。
            </summary>
            <returns>List&lt;SHTagConfigRecord&gt;，代表多筆標籤設定物件。</returns>
            <seealso cref="T:SHSchool.Data.SHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHTagConfigRecord&gt; records = SHTagConfig.SelectAll();
                
                foreach(SHTagConfigRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks></remarks>        
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.SelectByID(System.String)">
            <summary>
            根據單筆標籤設定編號取得標籤設定物件。
            </summary>
            <param name="TagConfigRecordID">標籤設定編號</param>
            <returns>SHTagConfigRecord，代表單筆標籤設定物件。</returns>
            <seealso cref="T:SHSchool.Data.SHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHTagConfigRecord record = SHTagConfig.SelectByID(TagConfigID);
                
               if (record != null)
                   System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks>若是TagConfigID不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆標籤設定編號取得標籤設定物件。
            </summary>
            <param name="TagConfigIDs">多筆標籤設定編號</param>
            <returns>List&lt;SHTagConfigRecord&gt;，代表多筆標籤設定物件。</returns>
            <seealso cref="T:SHSchool.Data.SHTagConfigRecord"/> 
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHTagConfigRecord&gt; records = SHTagConfig.SelectByIDs(TagConfigIDs);
                
                foreach(SHTagConfigRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.SelectByCategory(K12.Data.TagCategory)">
             <summary>
             根據標籤設定所屬分類( TagCategory )，取得該分類的標籤設定
             </summary>
             <param name="TagCategory">標籤設定所屬分類，參考 TagCategory 列舉型別。</param>
             <returns>List&lt;SHTagConfigRecord&gt;，指定標籤分類中的所有標籤設定</returns>
             <seealso cref="T:K12.Data.TagCategory"/>
             <seealso cref="T:SHSchool.Data.SHTagConfigRecord"/>
             <exception cref="T:System.Exception">
             </exception>
             <example>
                 <code>
                 List&lt;SHTagConfigRecord&gt; records = SHTagConfig.SelectByCategory(TagCategory.Student);
                 
                 foreach(SHTagConfigRecord record in records)
                     Console.WrlteLine(record.Name);
                 </code>
            </example>
            <remarks>傳入的參數可為TagCategory.Student、TagCategory.Class、TagCategory、Teacher、TagCategory.Course</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.SelectByCategoryAndPrefix(K12.Data.TagCategory,System.String)">
            <summary>
            根據標籤設定所屬分類( TagCategory )以及標籤設定類別（Prefix），取得該分類的標籤設定
            </summary>
            <param name="TagCategory">標籤設定所屬分類，參考 TagCategory 列舉型別。</param>
            <param name="Prefix">標籤設定類別（Prefix）</param>
            <returns>List&lt;SHTagConfigRecord&gt;，多筆標籤設定</returns>
            <seealso cref="T:K12.Data.TagCategory"/>
            <seealso cref="T:SHSchool.Data.SHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;string&gt; records = SHTagConfig.SelectPrefixByCategory(TagCategory.Student);
                
                    foreach(string record in records)
                        Console.WrlteLine(record);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.Insert(SHSchool.Data.SHTagConfigRecord)">
            <summary>
            新增單筆標籤設定記錄
            </summary>
            <param name="TagConfigRecord">標籤設定記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHTagConfigRecord newrecord = new SHTagConfigRecord();
                    newrecord.Prefix = (new System.Random()).NextDouble().ToString();
                    newrecord.Name = (new System.Random()).NextDouble().ToString();
                    newrecord.Category = "student";
                    strng NewID = SHTagConfig.Insert(newrecord)
                    SHTagConfigRecord record = SHTagConfig.SelectByID(NewID);
                    System.Console.Writeln(record.Name);
                </code>
            </example>
            <remarks>
            新增一律傳回新增物件的編號。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHTagConfigRecord})">
            <summary>
            新增多筆標籤設定記錄
            </summary>
            <param name="TagConfigRecords">多筆標籤設定記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHTagConfigRecord record = new SHTagConfigRecord();
                    record.Prefix = (new System.Random()).NextDouble().ToString();
                    record.Name = (new System.Random()).NextDouble().ToString();
                    record.Category = "student";
                    List&lt;SHTagConfigRecord&gt; records = new List&lt;SHTagConfigRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = SHTagConfig.Insert(records);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.Update(SHSchool.Data.SHTagConfigRecord)">
            <summary>
            更新單筆標籤設定記錄
            </summary>
            <param name="TagConfigRecord">標籤設定記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHTagConfigRecord record = SHTagConfig.SelectByID(TagConfigID);
                record.Name = (new System.Random()).NextDouble().ToString();
                int UpdateCount = SHTagConfig.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHTagConfigRecord})">
            <summary>
            更新多筆標籤設定記錄
            </summary>
            <param name="TagConfigRecords">多筆標籤設定記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHTagConfigRecord record = SHTagConfig.SelectByID(TagConfigID);
                record.Name = (new System.Random()).NextDouble().ToString();
                List&lt;SHTagConfigRecord&gt; records = new List&lt;SHTagConfigRecord&gt;();
                records.Add(record);
                int UpdateCount = SHTagConfig.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHTagConfigRecord})">
            <summary>
            刪除多筆標籤設定記錄
            </summary>
            <param name="TagConfigRecords">多筆標籤設定記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHTagConfigRecord&gt; records = SHTagConfig.SelectByIDs(TagConfigIDs);
                  int DeleteCount = SHTagConfig.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.Delete(SHSchool.Data.SHTagConfigRecord)">
            <summary>
            刪除單筆標籤設定記錄
            </summary>
            <param name="TagConfigRecord">標籤設定記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  SHTagConfigRecord record = SHTagConfig.SelectByID(TagConfigID);
                  int DeleteCount = SHTagConfig.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.Delete(System.String)">
            <summary>
            刪除單筆標籤設定記錄
            </summary>
            <param name="TagConfigID">標籤設定記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHTagConfig.Delete(TagConfigID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTagConfig.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆標籤設定記錄
            </summary>
            <param name="List&lt;string&gt;">多筆標籤設定記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHTagConfig.Delete(TagConfigIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHPermrecStatusMapping">
            <summary>
            學籍身份對照表類別，提供方法用來取得學籍身份對照表
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHPermrecStatusMapping.SelectAll">
            <summary>
            取得所有學籍身份對照表錄物件
            </summary>
            <returns>List&lt;SHPermrecStatusMappingInfo&gt;，學籍身份對照表記錄物件列表。</returns>
        </member>
        <member name="M:SHSchool.Data.SHPermrecStatusMapping.SelectByCode(System.String)">
            <summary>
            根據學籍身份代碼取得對應的學籍身份對照表記錄物件
            </summary>
            <param name="Code">學籍身份代碼</param>
            <returns>SHPermrecStatusMappingInfo，學籍身份對照表記錄物件</returns>
        </member>
        <member name="M:SHSchool.Data.SHPermrecStatusMapping.SelectyByStudentID(System.String)">
            <summary>
            根據學生編號取得對應的學籍身份對照表記錄物件列表。
            1.根據學生編號取得學生標籤。
            2.檢查學生標籤是否有在對照表當中。
            3.將有包含學生標籤的對照表物件加入到結果。
            </summary>
            <returns></returns>
        </member>
        <member name="T:SHSchool.Data.SHMeritDemeritReduceRecord">
            <summary>
            功過換算表記錄物件
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHProgramPlan">
            <summary>
            課程規劃類別，提供方法用來取得、新增、修改及刪除課程規劃資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHProgramPlan.SelectAllDetail">
            <summary>
            取得所有課程規劃明細列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:SHSchool.Data.SHProgramPlan.SelectAll">
            <summary>
            取得所有課程規劃列表。
            </summary>
            <returns>List&lt;SHProgramPlanRecord&gt;，代表多筆課程規劃記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHProgramPlanRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHProgramPlanRecord&gt; records = ProgramPlan.SelectAll();
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHProgramPlan.SelectByID(System.String)">
            <summary>
            根據單筆課程規劃編號取得課程規劃物件。
            </summary>
            <param name="ProgramPalnID">課程規劃篇號</param>
            <returns>SHProgramPlanRecord</returns>
            <seealso cref="T:SHSchool.Data.SHProgramPlanRecord"/>
        </member>
        <member name="M:SHSchool.Data.SHProgramPlan.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆課程規劃編號取得課程規劃列表。
            </summary>
            <param name="ProgramPlanIDs">多筆課程規劃編號</param>
            <returns>List&lt;SHProgramPlanRecord&gt;，代表多筆課程規劃記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHProgramPlanRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHProgramPlanRecord&gt; records = SHProgramPlan.SelectByIDs(ProgramPlanIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:SHSchool.Data.SHProgramPlan.Insert(SHSchool.Data.SHProgramPlanRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:SHSchool.Data.SHProgramPlan.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHProgramPlanRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:SHSchool.Data.SHProgramPlan.Update(SHSchool.Data.SHProgramPlanRecord)">
            <summary>
            更新單筆課程規劃記錄
            </summary>
            <param name="ProgramPlanRecord">課程規劃記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHProgramPlanRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHProgramPlan.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHProgramPlanRecord})">
            <summary>
            更新多筆課程規劃記錄
            </summary>
            <param name="ProgramPlanRecords">多筆課程規劃記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHProgramPlanRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHProgramPlan.Delete(SHSchool.Data.SHProgramPlanRecord)">
            <summary>
            刪除單筆課程規劃記錄
            </summary>
            <param name="ProgramPlanRecord">課程規劃記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHProgramPlanRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHProgramPlan.Delete(System.String)">
            <summary>
            刪除單筆課程規劃記錄
            </summary>
            <param name="ProgramPlanID">課程規劃編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHProgramPlan.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHProgramPlanRecord})">
            <summary>
            刪除多筆課程規劃記錄
            </summary>
            <param name="ProgramPlanRecords">多筆課程規劃記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHProgramPlanRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHProgramPlan.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆課程規劃記錄
            </summary>
            <param name="ProgramPlanIDs">多筆課程規劃編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:SHSchool.Data.SHExamRecord">
            <summary>
            試別項目資訊
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHAddress">
            <summary>
            學生地址類別，提供方法用來取得及修改學生地址資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHAddress.SelectAll">
            <summary>
            取得所有學生地址記錄物件列表。
            </summary>
            <returns>List&lt;SHAddressRecord&gt;，代表多筆學生地址記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHAddressRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHAddressRecord&gt; records = SHAddress.SelectAll();
                
                foreach(SHAddressRecord record in records)
                    System.Console.WriteLine(record.Name); 
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAddress.SelectByStudent(SHSchool.Data.SHStudentRecord)">
            <summary>
            根據單筆學生記錄物件取得學生地址記錄物件。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>SHAddressRecord，代表學生地址物件。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <seealso cref="T:SHSchool.Data.SHAddressRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHAddressRecord record = SHAddress.SelectByStudent(Student);
                    
                    if (record!=null)
                        System.Console.WriteLine(record.Permanent.ZipCode); 
                </code>
            </example>
            <remarks>若是Student不存在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHAddress.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生記錄編號取得學生地址記錄物件。
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>SHAddressRecord，代表學生地址記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHAddressRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHAddressRecord record = SHAddress.SelectByStudentID(StudentID);
                    
                    if (record!=null)
                    System.Console.WriteLine(record.Permanent.ZipCode); 
                </code>
            </example>
            <remarks>若是StudentID不存在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHAddress.SelectByStudents(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord})">
            <summary>
            根據多筆學生記錄物件取得地址記錄物件列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;SHAddressRecord&gt;，代表多筆學生地址記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHAddressRecord"/>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHAddressRecord&gt; records = SHAddress.SelectByStudents(Students);
                
                foreach(SHAddressRecord record in records)
                    System.Console.WriteLine(record.Name); 
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHAddress.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生記錄編號取得地址記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;SHAddressRecord&gt;，代表多筆學生地址記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHAddressRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHAddressRecord&gt; records = SHAddress.SelectByStudentIDs(StudentIDs);
                
                foreach(SHAddressRecord record in records)
                    System.Console.WriteLine(record.Name); 
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHAddress.Update(SHSchool.Data.SHAddressRecord)">
            <summary>
            更新單筆學生地址記錄
            </summary>
            <param name="AddressRecord">學生地址記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHAddressRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHAddressRecord record = SHAddress.SelectByStudentID(StudentID);
                record.PerPermanent.ZipCode = (new System.Random()).NextDouble().ToString();
                int UpdateCount = SHAddress.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHAddress.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHAddressRecord})">
            <summary>
            更新多筆學生地址記錄
            </summary>
            <param name="AddressRecords">多筆學生地址記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHAddressRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHAddressRecord record = SHAddress.SelectByStudentID(StudentID);
                record.PerPermanent.ZipCode = (new System.Random()).NextDouble().ToString();
                List&lt;SHAddressRecord&gt; records = new List&lt;SHAddressRecord&gt;();
                records.Add(record);
                int UpdateCount = SHAddress.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHClassTagRecord">
            <summary>
            班級標籤資訊
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHUpdateRecordBatchRecord">
            <summary>
            異動名冊記錄物件
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHSubjectTableRecord">
            <summary>
            核心及學程科目表記錄物件
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSubjectTableRecord.#ctor">
            <summary>
            空白建構式
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSubjectTableRecord.#ctor(System.Xml.XmlElement)">
            <summary>
            XML參數建構式
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:SHSchool.Data.SHSubjectTableRecord.Load(System.Xml.XmlElement)">
             <summary>
             從XML載入資料
             </summary>
             <![CDATA[ 
            <SubjectTable ID="1">
                <Catalog>核心科目表</Catalog>
                <Name>後期中等教育核心課程</Name>
                <Content>
                    <SubjectTableContent CreditCount="48">
                        <Subject Name="國文">
                            <Level>1</Level>
                            <Level>2</Level>
                            <Level>3</Level>
                            <Level>4</Level>
                        </Subject>
                        <Subject Name="歷史" />
                    </SubjectTableContent>
                </Content>
            </SubjectTable>
             ]]>
             <param name="data"></param>
        </member>
        <member name="M:SHSchool.Data.SHSubjectTableRecord.Load(System.Data.DataRow)">
            <summary>
            從DataRow載入資料
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:SHSchool.Data.SHSubjectTableRecord.ID">
            <summary>
            系統編號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectTableRecord.Catalog">
            <summary>
            目前為『核心科目表』或『學程科目表』
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectTableRecord.Name">
            <summary>
            名稱
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectTableRecord.CreditCount">
            <summary>
            必修學分數
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectTableRecord.CoreCount">
            <summary>
            核心科目學分數
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectTableRecord.Subjects">
            <summary>
            科目列表
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHSubjectTableSubject">
            <summary>
            學程或核心科目表科目
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSubjectTableSubject.Load(System.Xml.XmlElement)">
            <summary>
            從XML參數載入
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:SHSchool.Data.SHSubjectTableSubject.Name">
            <summary>
            科目名稱
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectTableSubject.IsCore">
            <summary>
            是否為核心科目，只有學程科目表會是true或false，若是核心科目表的科目，其值為null。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSubjectTableSubject.Levels">
            <summary>
            級別
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHAttendance">
            <summary>
            學生缺曠類別，提供方法用來取得、新增、修改及刪除學生缺曠資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.SelectAll">
            <summary>
            取得所有缺曠紀錄
            </summary>
            <returns>List&lt;SHAttendanceRecord&gt;，一個SHAttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
            <seealso cref="T:SHSchool.Data.SHAttendanceRecord"/>
            <example>
                <code>
                List&lt;SHAttendanceRecord&gt; records = SHAttendance.SelectAll();
                
                foreach(SHAttendanceRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>    
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            根據條件取得缺曠紀錄列表
            </summary>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">缺曠發生開始時間</param>
            <param name="EndDate">缺曠發生結束時間</param>
            <param name="OccurDate">缺曠發生時間</param>
            <param name="SchoolYears">學年度列表</param>
            <param name="Semesters">學期列表</param>
            <returns>List&lt;SHAttendanceRecord&gt;，一個 AttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{K12.Data.SchoolYearSemester})">
            <summary>
            根據條件取得缺曠紀錄列表
            </summary>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">缺曠發生開始時間</param>
            <param name="EndDate">缺曠發生結束時間</param>
            <param name="OccurDates">缺曠發生時間列表</param>
            <param name="SchoolYears">學年度列表</param>
            <param name="Semesters">學期列表</param>
            <param name="SchoolYearSemesters">學年度學期列表</param>
            <returns>List&lt;SHAttendanceRecord&gt;，一個 AttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.SelectBySchoolYearAndSemester(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            取得指定學生在某學年度學期的學生缺曠紀錄
            </summary>
            <param name="Students">學生記錄物件列表</param>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <returns>List&lt;SHAttendanceRecord&gt;，一個 AttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
            <seealso cref="T:SHSchool.Data.SHAttendanceRecord"/>
            <example>
                <code>
                List&lt;SHAttendanceRecord&gt; records = SHAttendance.SelectBySchoolYearAndSemester(Students, 98,1);
                
                foreach(SHAttendanceRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>    
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.SelectByDate(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord},System.DateTime,System.DateTime)">
             <summary>
             取得指定學生在日期區間的學生缺曠紀錄
             </summary>
             <param name="Students">學生記錄物件列表</param>
             <param name="BeginDate">開始日期</param>
             <param name="EndDate">結束日期</param>
             <returns>List&lt;SHAttendanceRecord&gt;，一個 AttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
             <seealso cref="T:SHSchool.Data.SHAttendanceRecord"/>
             <remarks></remarks>
             <example>
                 <code>
                 DateTime beginDate = new DateTime(2009, 4, 1);
                 DateTime endDate = DateTime.Now ;
            
                 ListList&lt;SHAttendanceRecord&gt; records = SHAttendance.SelectByDate(Students, beginDate, endDate );
                 
                 foreach(SHAttendanceRecord record in records)
                     System.Console.WriteLine(record.RefStudentID);
                 </code>
             </example>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.SelectByDate(System.DateTime,System.DateTime)">
             <summary>
             取得指定日期區間的學生缺曠紀錄
             </summary>
             <param name="BeginDate">開始日期</param>
             <param name="EndDate">結束日期</param>
             <returns>List&lt;SHAttendanceRecord&gt;，一個AttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
             <seealso cref="T:SHSchool.Data.SHAttendanceRecord"/>
             <example>
                 <code>
                 DateTime beginDate = new DateTime(2009, 4, 1);
                 DateTime endDate = DateTime.Now ;
            
                 List&lt;SHAttendanceRecord&gt; records = SHAttendance.SelectByDate(StudentIDs,beginDate, endDate );
                 foreach(SHAttendanceRecord record in records)
                     System.Console.WriteLine(record.RefStudentID);
                 </code>
             </example>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.SelectByStudents(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord})">
            <summary>
            取得指定學生歷年所有的學生缺曠紀錄
            </summary>
            <param name="Students">學生記錄物件列表</param>
            <returns>List&lt;SHAttendanceRecord&gt;，一個 AttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
            <seealso cref="T:SHSchool.Data.SHAttendanceRecord"/>
            <example>
                <code>
                List&lt;SHAttendanceRecord&gt; records = SHAttendance.SelectByStudents(Students);
                
                foreach(SHAttendanceRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生缺曠紀錄
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;SHAttendanceRecord&gt;，一個 SHAttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
            <seealso cref="T:SHSchool.Data.SHAttendanceRecord"/>
            <example>
                <code>
                List&lt;SHAttendanceRecord&gt; records = SHAttendance.SelectByStudentIDs(StudentIDs);
                
                foreach(SHAttendanceRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.Insert(SHSchool.Data.SHAttendanceRecord)">
            <summary>
            新增單筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecord">學生缺曠記錄</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHAttendanceRecord newrecord = new SHAttendanceRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    strng NewID = SHAttendance.Insert(newrecord)
                    SHAttendanceRecord record = SHAttendance.SelectByID(NewID);
                    System.Console.Writeln(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為學生記錄編號（RefStudentID）、學年度（SchoolYear）、學期（Semester）、缺曠日期（OccurDate）。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHAttendanceRecord})">
            <summary>
            新增多筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecords">多筆班級記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHAttendanceRecord record = new SHAttendanceRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    
                    List&lt;SHAttendanceRecord&gt; records = new List&lt;SHAttendanceRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = SHAttendance.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.Update(SHSchool.Data.SHAttendanceRecord)">
            <summary>
            更新單筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecord">學生缺曠記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHAttendanceRecord record = SHAttendance.SelectByStudentID(Student)[0];
                record.OccurDate = DateTime.Today;
                int UpdateCount = SHAttendance.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHAttendanceRecord})">
            <summary>
            更新多筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecords">多筆學生缺曠記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHAttendanceRecord record = SHAttendance.SelectByStudentID(Student)[0];
                record.Date = DateTime.Today;
                List&lt;SHAttendanceRecord&gt; records = new List&lt;SHAttendanceRecord&gt;();
                records.Add(record);
                int UpdateCount = SHAttendance.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.Delete(SHSchool.Data.SHAttendanceRecord)">
            <summary>
            刪除單筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecord">學生缺曠記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHAttendanceRecord&gt; records = SHAttendance.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = SHAttendance.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.Delete(System.String)">
            <summary>
            刪除單筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecordID">學生缺曠記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHAttendance.Delete(AttendanceID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHAttendanceRecord})">
            <summary>
            刪除多筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecords">多筆學生缺曠記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHAttendanceRecord&gt; records = SHAttendance.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = SHAttendance.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHAttendance.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecordIDs">多筆學生缺曠記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHAttendance.Delete(AttendanceIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHAbsenceMapping">
            <summary>
            假別對照類別，提供方法用來取得假別對照資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHAbsenceMapping.SelectAll">
            <summary>
            取得所有假別對照資訊
            </summary>
            <returns>List&lt;SHAbsenceMappingInfo&gt;，代表假別對照資訊物件列表。</returns>
        </member>
        <member name="T:SHSchool.Data.Morality">
            <summary>
            文字評量代碼表
            </summary>
        </member>
        <member name="M:SHSchool.Data.Morality.SelectAll">
            <summary>
            取得所有文字評量代碼表記錄
            </summary>
            <returns>文字評量代碼表記錄列表</returns>
        </member>
        <member name="T:SHSchool.Data.SHCourseRecord">
            <summary>
            課程資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHCourseRecord.Class">
            <summary>
            所屬班級
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHCourseRecord.AssessmentSetup">
            <summary>
            所屬試別設定
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHCourseRecord.Entry">
            <summary>
            分項
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHCourseRecord.Level">
            <summary>
            科目級別
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHCourseRecord.RequiredBy">
            <summary>
            部/校訂
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHCourseRecord.Required">
            <summary>
            必俢
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHCourseRecord.NotIncludedInCredit">
            <summary>
            不計入學分
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHCourseRecord.NotIncludedInCalc">
            <summary>
            不計分
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHLeaveInfoRecord">
            <summary>
            學生離校資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHLeaveInfoRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHLeaveInfoRecord.DepartmentName">
            <summary>
            畢業時的科別名稱
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHTagConfigRecord">
            <summary>
            標籤設定資訊
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHSchoolYearEntryScore">
            <summary>
            學生學年分項成績類別，提供方法用來取得、新增、修改及刪除學生學年分項成績資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearEntryScore.Select(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            根據條件取得學生學期分項成績物件紀錄列表
            </summary>
            <param name="IDs">學生學期分項成績編號</param>
            <param name="StudentIDs">學生編號列表</param>
            <param name="EntryGroup">分項群組</param>
            <param name="SchoolYears">學年度列表</param>
            <returns>List&lt;SHSchoolYearEntryScoreRecord&gt;，代表多筆學生學期分項紀錄物件。</returns>
        </member>
        <member name="T:SHSchool.Data.SHScoreCalcRule">
            <summary>
            成績計算規則類別，適用於學生及班級，提供方法用來取得、新增、修改及刪除成績計算規則資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHScoreCalcRule.SelectAll">
            <summary>
            取得所有成績計算規則列表。
            </summary>
            <returns>List&lt;SHScoreCalcRuleRecord&gt;，代表多筆成績計算規則記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHScoreCalcRuleRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHScoreCalcRuleRecord&gt; records = SHScoreCalcRule.SelectAll();
            </example>
        </member>
        <member name="M:SHSchool.Data.SHScoreCalcRule.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            依學生系統編號列表取得成績計算規則
            </summary>
            <param name="StudentIDs">學生系統編號列表</param>
            <returns></returns>
        </member>
        <member name="M:SHSchool.Data.SHScoreCalcRule.SelectByID(System.String)">
            <summary>
            根據單筆成績計算規則編號取得成績計算規則物件。
            </summary>
            <param name="ScoreCalcRuleID">成績計算規則編號</param>
            <returns>SHScoreCalcRuleRecord，成績計算規則物件</returns>
            <seealso cref="T:SHSchool.Data.SHScoreCalcRuleRecord"/>
        </member>
        <member name="M:SHSchool.Data.SHScoreCalcRule.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆成績計算規則編號取得成績計算規則列表。
            </summary>
            <param name="ScoreCalcRuleIDs">多筆成績計算規則編號</param>
            <returns>List&lt;SHScoreCalcRuleRecord&gt;，代表多筆成績計算規則記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHScoreCalcRuleRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHScoreCalcRuleRecord&gt; records = SHScoreCalcRule.SelectByIDs(ScoreCalcRuleIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:SHSchool.Data.SHScoreCalcRule.Insert(SHSchool.Data.SHScoreCalcRuleRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:SHSchool.Data.SHScoreCalcRule.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHScoreCalcRuleRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:SHSchool.Data.SHScoreCalcRule.Update(SHSchool.Data.SHScoreCalcRuleRecord)">
            <summary>
            更新單筆成績計算規則記錄
            </summary>
            <param name="ScoreCalcRuleRecord">成績計算規則記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHScoreCalcRuleRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHScoreCalcRule.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHScoreCalcRuleRecord})">
            <summary>
            更新多筆成績計算規則記錄
            </summary>
            <param name="ScoreCalcRuleRecords">多筆成績計算規則記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHScoreCalcRuleRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHScoreCalcRule.Delete(SHSchool.Data.SHScoreCalcRuleRecord)">
            <summary>
            刪除單筆成績計算規則記錄
            </summary>
            <param name="ScoreCalcRuleRecord">成績計算規則記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHScoreCalcRuleRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHScoreCalcRule.Delete(System.String)">
            <summary>
            刪除單筆成績計算規則記錄
            </summary>
            <param name="ScoreCalcRuleID">成績計算規則編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHScoreCalcRule.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHScoreCalcRuleRecord})">
            <summary>
            刪除多筆成績計算規則記錄
            </summary>
            <param name="ScoreCalcRuleRecords">多筆成績計算規則記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHScoreCalcRuleRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHScoreCalcRule.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆成績計算規則記錄
            </summary>
            <param name="ScoreCalcRuleIDs">多筆成績計算規則編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:SHSchool.Data.SHTeacherTag">
            <summary>
            教師標籤類別，提供方法用來取得、新增、修改及刪除班級標籤資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHTeacherTag.SelectAll">
            <summary>
            取得所有教師標籤列表。
            </summary>
            <returns>List&lt;SHTeacherTagRecord&gt;，代表多筆教師標籤物件。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHTeacherTagRecord&gt; records = SHTeacherTag.SelectAll();
                   
                    foreach(SHTeacherTagRecord record in records)
                        System.Console.WriteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTeacherTag.SelectByTeacherID(System.String)">
            <summary>
            根據單筆教師編號取得教師標籤列表。
            </summary>
            <param name="TeacherID">教師編號</param>
            <returns>List&lt;SHTeacherTagRecord&gt;，代表多筆教師標籤物件。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <sample>
                <code>
                    List&lt;SHTeacherTagRecord&gt; records = SHTeacherTag.SelectByTeacherID(TeacherID);
                   
                    foreach(SHTeacherTagRecord record in records)
                      System.Console.WriteLine(record.Name);
                </code>
            </sample>
        </member>
        <member name="M:SHSchool.Data.SHTeacherTag.SelectByTeacherIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆教師編號取得教師標籤列表。
            </summary>
            <param name="TeacherIDs">多筆教師編號</param>
            <returns>List&lt;SHTeacherTagRecord&gt;，代表多筆教師標籤物件。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHTeacherTagRecord&gt; records = SHTeacherTag.SelectByTeacherIDs(TeacherIDs);
               
                forech(SHTeacherTagRecord record in records)
                    System.Console.WriteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTeacherTag.Insert(SHSchool.Data.SHTeacherTagRecord)">
            <summary>
            新增單筆教師標籤記錄
            </summary>
            <param name="TeacherTagRecord">教師標籤記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHTeacherTagRecord  record = new SHTeacherTagRecord(TeacherID, TagConfigID);
                string NewID = SHTeacherTag.Insert(record); 
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為教師編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacherTag.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHTeacherTagRecord})">
            <summary>
            新增多筆教師標籤記錄
            </summary>
            <param name="TeacherTagRecords">多筆教師標籤記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHTeacherTagRecord record = new SHTeacherTagRecord(TeacherID, TagConfigID);
                List&lt;SHTeacherTagRecord&gt; records = new List&lt;SHTeacherTagRecord&gt;();
                records.Add(record);
                List&lt;string&gt; NewIDs = SHTeacherTag.Insert(records); 
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為教師編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacherTag.Update(SHSchool.Data.SHTeacherTagRecord)">
            <summary>
            更新單筆教師標籤記錄
            </summary>
            <param name="TeacherTagRecord">教師標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHTeacherTagRecord&gt; records = SHTeacherTag.SelectByTeacherID(TeacherID);       
                    records[0].RefEntityID = TeacherID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = SHTeacherTag.Update(record[0]);
                </code>
            </example>
            <remarks>
            1.更新的欄位值只有TeacherID及TagConfigID，其它為唯讀欄位。
            2.傳回值為成功更新的筆數。
            </remarks>       
        </member>
        <member name="M:SHSchool.Data.SHTeacherTag.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHTeacherTagRecord})">
            <summary>
            更新多筆教師標籤記錄
            </summary>
            <param name="TeacherTagRecords">多筆教師標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHTeacherTagRecord&gt; records = SHTeacherTag.SelectByTeacherID(TeacherID);       
                    records[0].RefEntityID = TeacherID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = SHTeacherTag.Update(records);
                </code>
            </example>
            <remarks>
            1.更新的欄位值只有TeacherID及TagConfigID，其它為唯讀欄位。
            2.傳回值為成功更新的筆數。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacherTag.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHTeacherTagRecord})">
            <summary>
            刪除多筆教師標籤記錄
            </summary>
            <param name="TeacherTagRecords">多筆教師標籤記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHTeacherTagRecord&gt; records = SHTeacherTag.SelectByTeacherID(TeacherID);
                    int DeleteCount = SHTeacherTag.Delete(records);
                </code>
            </example>
            <remarks>
            傳回值為成功刪除的筆數。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacherTag.Delete(SHSchool.Data.SHTeacherTagRecord)">
            <summary>
            刪除單筆教師標籤記錄
            </summary>
            <param name="TeacherTagRecord">教師標籤記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHTeacherTagRecord&gt; records = SHTeacherTag.SelectByTeacherID(TeacherID);
                    int DeleteCount = SHTeacherTag.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHSubjectTable">
            <summary>
            核心科目表或學程科目表
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSubjectTable.Select(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            取得核心科目表或學程科目表
            </summary>
            <returns></returns>
        </member>
        <member name="T:SHSchool.Data.SHClassRecord">
            <summary>
            班級資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHClassRecord.Teacher">
            <summary>
            班導師
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHClassRecord.ProgramPlan">
            <summary>
            所屬課程規劃
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHClassRecord.ScoreCalcRule">
            <summary>
            所屬成績計算規則
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHClassRecord.Students">
            <summary>
            取得班級學生
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHClassRecord.RefDepartmentID">
            <summary>
            所屬科別編號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHClassRecord.Department">
            <summary>
            所屬科別
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHMoralScore">
            <summary>
            學期德行評量類別，提供方法用來取得、新增、修改及刪除學期德行評量資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHMoralScore.SelectAll">
            <summary>
            取得所有學期德行評量列表。
            </summary>
            <returns>List&lt;SHMoralScoreRecord&gt;，代表多筆學期德行評量記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHMoralScoreRecord&gt; records = SHMoralScore.SelectAll();
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHMoralScore.Select(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            取得德行評量列表
            </summary>
            <param name="IDs">德行評量記錄物件編號列表。</param>
            <param name="StudentIDs">學生編號列表。</param>
            <param name="SchoolYear">學年度。</param>
            <param name="Semester">學期。</param>
            <returns>List&lt;MoralScoreRecord&gt;，代表多筆學期德行評量記錄物件。</returns>
        </member>
        <member name="M:SHSchool.Data.SHMoralScore.Select(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{K12.Data.SchoolYearSemester})">
            <summary>
            取得德行評量列表 
            </summary>
            <param name="IDs">德行評量記錄物件編號列表。</param>
            <param name="StudentIDs">學生編號列表。</param>
            <param name="SchoolYear">學年度。</param>
            <param name="Semester">學期。</param>
            <param name="SchoolYearSemesters">學年度學期列表。</param>
            <returns>List&lt;SHMoralScoreRecord&gt;，代表多筆學期德行評量記錄物件。</returns>
        </member>
        <member name="M:SHSchool.Data.SHMoralScore.SelectBySchoolYearAndSemester(System.String,System.Int32,System.Int32)">
            <summary>
            根據學生編號、學年度及學期取得學期德行評量列表。
            </summary>
            <param name="StudentID">學生編號</param>
            <param name="SchoolYear">學年度</param>
            <param name="Semester">學期</param>
            <returns>List&lt;SHMoralScoreRecord&gt;，代表多筆學期德行評量記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHMoralScoreRecord&gt; records = SHMoralScore.SelectBySchoolYearAndSemester(StudentID,SchoolYear,Semester);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHMoralScore.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學期德行評量列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;SHMoralScoreRecord&gt;，代表多筆學期德行評量記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHMoralScoreRecord&gt; records = SHMoralScore.SelectByStudentIDs(StudentIDs);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHMoralScore.Insert(SHSchool.Data.SHMoralScoreRecord)">
            <summary>
            新增單筆學期德行評量記錄
            </summary>
            <param name="MoralScoreRecord">學期德行評量記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <!-- 忽略成員 "M:SHSchool.Data.SHMoralScore.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHMoralScoreRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:SHSchool.Data.SHMoralScore.Update(SHSchool.Data.SHMoralScoreRecord)">
            <summary>
            更新單筆學期德行評量記錄
            </summary>
            <param name="MoralScoreRecord">學期德行評量記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHMoralScore.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHMoralScoreRecord})">
            <summary>
            更新多筆學期德行評量記錄
            </summary>
            <param name="MoralScoreRecords">多筆學期德行評量記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHMoralScore.Delete(SHSchool.Data.SHMoralScoreRecord)">
            <summary>
            刪除單筆學期德行評量記錄
            </summary>
            <param name="MoralScoreRecord">學期德行評量記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHMoralScore.Delete(System.String)">
            <summary>
            刪除單筆學期德行評量記錄
            </summary>
            <param name="MoralScoreID">學期德行評量記錄編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHMoralScore.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHMoralScoreRecord})">
            <summary>
            刪除多筆學期德行評量記錄
            </summary>
            <param name="MoralScoreRecords">多筆學期德行評量記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHMoralScore.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學期德行評量記錄
            </summary>
            <param name="MoralScoreIDs">多筆學期德行評量記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:SHSchool.Data.SHAEIncludeRecord">
            <summary>
            評分樣板資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHAEIncludeRecord.UseText">
            <summary>
            是否有文字評量
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHAEIncludeRecord.UseScore">
            <summary>
            是否有百分比成績
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHAEIncludeRecord.OpenTeacherAccess">
            <summary>
            是否開放TeacherAccess輸入成績
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHAEIncludeRecord.InputRequired">
            <summary>
            是否強制輸入成績
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHAEIncludeRecord.AssessmentSetup">
            <summary>
            試別樣版記錄物件
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHAEIncludeRecord.Exam">
            <summary>
            試別項目記錄物件
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHScoreCalcRuleRecord">
            <summary>
            成績計算規則資訊
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHRankingInfo">
            <summary>
            排名資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHRankingInfo.#ctor(System.Xml.XmlElement,System.String)">
            <summary>
            XML參數建構式
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:SHSchool.Data.SHRankingInfo.Load(System.Xml.XmlElement,System.String)">
            <summary>
            XML參數建構式
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:SHSchool.Data.SHRankingInfo.Score">
            <summary>
            分數
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHRankingInfo.ScoreNumber">
            <summary>
            成績人數
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHRankingInfo.Ranking">
            <summary>
            排名
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHRankingInfo.Name">
            <summary>
            排序名稱
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHUpdateRecordRecord">
            <summary>
            學生異動記錄資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.Department">
            <summary>
            異動科別名稱
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.PreviousSchool">
            <summary>
            轉入前學生學校
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.PreviousStudentNumber">
            <summary>
            轉入前學生學號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.PreviousDepartment">
            <summary>
            轉入前科別
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.PreviousSchoolLastADDate">
            <summary>
            轉入前最後核準日期
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.PreviousSchoolLastADNumber">
            <summary>
            轉入前最後核準文號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.PreviousGradeYear">
            <summary>
            轉入前年級
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.PreviousSemester">
            <summary>
            轉入前學期，99年進校轉入生異動名冊開始新增使用。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.GraduateSchoolLocationCode">
            <summary>
            畢業國中所在地代碼
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.GraduateSchool">
            <summary>
            畢業國中
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.GraduateSchoolCode">
            <summary>
            畢業國中學校代碼
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.GraduateCertificateNumber">
            <summary>
            高中畢業證書字號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.LastUpdateCode">
            <summary>
            最後異動代碼
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.NewStudentNumber">
            <summary>
            新學號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.NewData">
            <summary>
            更正後資料，一般適用學籍異動，可能異動的資料為更改姓名、更改身份證字號、更改學號、更改生日、更改性別。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.ClassType">
            <summary>
            班別
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.OldClassType">
            <summary>
            舊班別，異動原因代碼如果是222 復學(一) 轉科,224 復學(二) 轉科,232 重讀(一) 轉科,234 重讀(二) 轉科,238 復學(一) 重讀轉科必須填寫。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.OldDepartmentCode">
            <summary>
            舊科別代碼，異動原因代碼如果是222 復學(一) 轉科,224 復學(二) 轉科,232 重讀(一) 轉科,234 重讀(二) 轉科,238 復學(一) 重讀轉科必須填寫。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.SpecialStatus">
            <summary>
            特殊身份代碼，亦為學籍身份代碼，取得對照表請使用SHPermrecStatusMapping.SelectAll()方法，其值一般為SHPermrecStatusMappingInfo.Code屬性。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.IDNumberComment">
            <summary>
            身份證號註（註1），正常：空白、錯誤填1、重號填2、非身份字號填3（如居留證字號），所謂的重號指與所有國民的身份證字號有重覆。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.GraduateSchoolYear">
            <summary>
            國中畢業年度，該生國中畢業學年度，非入學年度。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.ExpectGraduateSchoolYear">
            <summary>
            應畢業學年度，使用在呈報日校99學年度延修生名冊、延修生學籍異動名冊、延修生畢業名冊。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.GraduateComment">
            <summary>
            入學資格備註，假設在對照表內則應設為空白，否則設為1；取得國中列表使用School.SelectJuniorSchools()方法、取得國小列表使用School.SelectElementarySchools()方法。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.Comment2">
            <summary>
            日校用備註2：在學籍異動表示更正後身分證註記代碼，在他校轉入表示轉入身分別代碼。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.GraduateDocument">
            <summary>
            入學資格證明文件
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateRecordRecord.UpdateType">
            <summary>
            異動記錄種類(新生異動、轉入異動、畢業異動、學籍異動)。
            </summary>
        </member>
        <member name="T:SHSchool.Data.MoralityRecord">
            <summary>
            文字評量代碼表記錄
            </summary>
        </member>
        <member name="M:SHSchool.Data.MoralityRecord.Load(System.Xml.XmlElement)">
            <summary>
            從XML載入
            </summary>
            <param name="Element"></param>
        </member>
        <member name="M:SHSchool.Data.MoralityRecord.#ctor(System.Xml.XmlElement)">
            <summary>
            Xml參數建構式
            </summary>
            <param name="Element"></param>
        </member>
        <member name="M:SHSchool.Data.MoralityRecord.#ctor">
            <summary>
            無參數建構式
            </summary>
        </member>
        <member name="P:SHSchool.Data.MoralityRecord.Name">
            <summary>
            名稱
            </summary>
        </member>
        <member name="P:SHSchool.Data.MoralityRecord.Items">
            <summary>
            項目
            </summary>
        </member>
        <member name="T:SHSchool.Data.MoralityItem">
            <summary>
            文字評量代碼表項目
            </summary>
        </member>
        <member name="P:SHSchool.Data.MoralityItem.Code">
            <summary>
            代碼
            </summary>
        </member>
        <member name="P:SHSchool.Data.MoralityItem.Comment">
            <summary>
            註解
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHDepartment">
            <summary>
            科別類別，提供方法用來取得、新增、修改及刪除課程資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHDepartment.SelectAll">
            <summary>
            取得所有科別
            </summary>
            <returns>List&lt;SHDepartmentRecord&gt;，代表多筆科別物件。</returns>
            <seealso cref="T:SHSchool.Data.SHDepartmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHDepartmentRecord&gt; records = SHDepartment.SelectAll();
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDepartment.SelectByID(System.String)">
            <summary>
            根據單筆科別編號取得科別記錄物件
            </summary>
            <param name="DepartmentID">科別記錄編號</param>
            <returns>SHDepartmentRecord，科別記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHDepartmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHDepartmentRecord record = SHDepartmentRecord.SelectByID(DepartmentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDepartment.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆科別編號取得科別記錄列表
            </summary>
            <param name="DepartmentIDs">多筆科別記錄編號</param>
            <returns>List&lt;SHDepartmentRecord&gt;，代表多筆科別物件。</returns>
            <seealso cref="T:SHSchool.Data.SHDepartmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHDepartmentRecord&gt; records = SHDepartment.SelectByIDs(DepartmentIDs);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDepartment.Insert(SHSchool.Data.SHDepartmentRecord)">
            <summary>
            新增單筆科別記錄
            </summary>
            <param name="DepartmentRecord">科別記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHDepartmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHDepartmentRecord newrecord = new SHDepartmentRecord();
                    strng NewID = SHDepartment.Insert(newrecord)
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDepartment.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHDepartmentRecord})">
            <summary>
            新增多筆科別記錄
            </summary>
            <param name="DepartmentRecords">多筆科別記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHDepartmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHDepartmentRecord record = new SHDepartmentRecord();
                    List&lt;SHDepartmentRecord&gt; records = new List&lt;SHDepartmentRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = SHDepartment.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDepartment.Update(SHSchool.Data.SHDepartmentRecord)">
            <summary>
            更新單筆科別記錄
            </summary>
            <param name="DepartmentRecord">科別記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHDepartmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHDepartmentRecord record = SHDepartment.SelectByID(DepartmentID);
                int UpdateCount = SHDepartment.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDepartment.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHDepartmentRecord})">
            <summary>
            更新多筆科別記錄
            </summary>
            <param name="records">科別記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHDepartmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHDepartmentRecord record = SHDepartment.SelectByID(DepartmentID);
                List&lt;SHDepartmentRecord&gt; records = new List&lt;SHDepartmentRecord&gt;();
                records.Add(record);
                int UpdateCount = SHDepartment.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDepartment.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHDepartmentRecord})">
            <summary>
            刪除多筆科別記錄
            </summary>
            <param name="DepartmentRecords">多筆科別記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHDepartmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHDepartmentRecord&gt; records = SHDepartment.SelectByIDs(DepartmentIDs);
                  int DeleteCount = SHDepartment.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDepartment.Delete(SHSchool.Data.SHDepartmentRecord)">
            <summary>
            刪除單筆科別記錄
            </summary>
            <param name="DepartmentRecord">科別記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHDepartmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHDeaprtmentRecord&gt; record = SHDepartment.SelectByID(DepartmentID);
                  int DeleteCount = SHDepartment.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDepartment.Delete(System.String)">
            <summary>
            刪除單筆科別記錄
            </summary>
            <param name="ClassID">科別記錄系統編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHDepartment.Delete(DepartmentID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDepartment.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆科別記錄
            </summary>
            <param name="DepartmentIDs">多筆科別記錄系統編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int Count = SHDepartment.Delete(DepartmentIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="E:SHSchool.Data.SHDepartment.AfterInsert">
            <summary>
            新增之後所觸發的事件
            </summary>
        </member>
        <member name="E:SHSchool.Data.SHDepartment.AfterUpdate">
            <summary>
            更新之後所觸發的事件
            </summary>
        </member>
        <member name="E:SHSchool.Data.SHDepartment.AfterDelete">
            <summary>
            刪除之後所觸發的事件
            </summary>
        </member>
        <member name="E:SHSchool.Data.SHDepartment.AfterChange">
            <summary>
            資料改變之後所觸發的事件，新增、更新、刪除都會觸發
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHSchoolYearScoreRecord">
            <summary>
            學生學年成績紀錄物件
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearScoreRecord.#ctor">
            <summary>
            空白建構式
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearScoreRecord.#ctor(System.Xml.XmlElement)">
            <summary>
            XML參數建構式
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearScoreRecord.Load(System.Xml.XmlElement)">
            <summary>
            從XML參數載入資料
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreRecord.ID">
            <summary>
            系統編號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreRecord.RefStudentID">
            <summary>
            所屬學生編號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreRecord.SchoolYear">
            <summary>
            學年度
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreRecord.GradeYear">
            <summary>
            年級
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreRecord.ClassScopeNumber">
            <summary>
            班級範圍人數
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreRecord.ClassRating">
            <summary>
            班級排名
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreRecord.YearScopeNumber">
            <summary>
            年級範圍人數
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreRecord.YearRating">
            <summary>
            年級排名
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreRecord.DeptScopeNumber">
            <summary>
            科範圍人數
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreRecord.DeptRating">
            <summary>
            科排名
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreRecord.Subjects">
            <summary>
            學期科目成績
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHSchoolYearScoreSubject">
            <summary>
            學生學年科目成績紀錄物件
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearScoreSubject.#ctor">
            <summary>
            空白建構式
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearScoreSubject.#ctor(System.Xml.XmlElement)">
            <summary>
            XML參數建構式
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearScoreSubject.Load(System.Xml.XmlElement)">
            <summary>
            由XML載入資料
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreSubject.Subject">
            <summary>
            科目名稱
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearScoreSubject.Score">
            <summary>
            分數
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHMeritRecord">
            <summary>
            學生獎勵資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHMeritRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHAttendanceRecord">
            <summary>
            學生缺曠資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHAttendanceRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHMeritDemeritReduce">
            <summary>
            取得及更新功過換算表
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHMeritDemeritReduce.Select">
            <summary>
            取得功過換算表
            </summary>
            <returns>功過換算表記錄物件</returns>
        </member>
        <member name="T:SHSchool.Data.SHTeacher">
            <summary>
            教師類別，提供方法用來取得、新增、修改及刪除教師資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHTeacher.SelectAll">
            <summary>
            取得所有教師記錄列表。
            </summary>
            <returns>List&lt;SHTeacherRecord&gt;，代表多筆教師記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHTeacherRecord&gt; records = SHTeacher.SelectAll();
                
                foreach(SHTeacherRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacher.SelectByID(System.String)">
            <summary>
            根據單筆教師編號取得教師記錄物件。
            </summary>
            <param name="TeacherID">教師編號</param>
            <returns>SHTeacherRecord，代表教師記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHTeacherRecord record = SHTeacher.SelectByID(TeacherID);
                
               if (record != null)
                   System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks>若是TeacherID不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacher.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆教師編號取得教師記錄列表。
            </summary>
            <param name="TeacherIDs">多筆教師編號</param>
            <returns>List&lt;SHTeacherRecord&gt;，代表多教師記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHTeacherRecord&gt; records = SHTeacher.SelectByIDs(TeacherIDs);
                
                foreach(SHTeacherRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacher.Insert(SHSchool.Data.SHTeacherRecord)">
            <summary>
            新增單筆教師記錄
            </summary>
            <param name="TeacherRecord">教師記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHTeacherRecord newrecord = new SHTeacherRecord();
                    newrecord.Name = (new System.Random()).NextDouble().ToString();
                    strng NewID = SHTeacher.Insert(newrecord)
                    SHTeacherRecord record = SHTeacher.SelectByID(NewID);
                    System.Console.Writeln(record.Name);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為課程名稱（Name）。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacher.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHTeacherRecord})">
            <summary>
            新增多筆教師記錄
            </summary>
            <param name="TeacherRecords">多筆教師記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHTeacherRecord record = new SHTeacherRecord();
                    record.Name = (new System.Random()).NextDouble().ToString();
                    List&lt;SHTeacherRecord&gt; records = new List&lt;SHTeacherRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = SHTeacher.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTeacher.Update(SHSchool.Data.SHTeacherRecord)">
            <summary>
            更新單筆教師記錄
            </summary>
            <param name="TeacherRecord">教師記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHTeacherRecord record = SHTeacher.SelectByID(TeacherID);
                record.Name = (new System.Random()).NextDouble().ToString();
                int UpdateCount = SHTeacher.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacher.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHTeacherRecord})">
            <summary>
            更新多筆教師記錄
            </summary>
            <param name="TeacherRecords">多筆教師記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHTeacherRecord record = SHTeacher.SelectByID(CourseID);
                record.Name = (new System.Random()).NextDouble().ToString();
                List&lt;SHTeacherRecord&gt; records = new List&lt;SHTeacherRecord&gt;();
                records.Add(record);
                int UpdateCount = SHTeacher.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacher.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHTeacherRecord})">
            <summary>
            刪除多筆教師記錄
            </summary>
            <param name="TeacherRecords">多筆教師記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHTeacherRecord&gt; records = SHTeacher.SelectByIDs(CourseIDs);
                  int DeleteCount = SHTeacher.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacher.Delete(SHSchool.Data.SHTeacherRecord)">
            <summary>
            刪除單筆教師記錄
            </summary>
            <param name="TeacherRecord">教師記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  SHTeacherRecord record = SHTeacher.SelectByID(TeacherID);
                  int DeleteCount = SHTeacher.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacher.Delete(System.String)">
            <summary>
            刪除單筆教師記錄
            </summary>
            <param name="TeacherID">教師記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHTeacher.Delete(TeacherID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHTeacher.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆教師記錄
            </summary>
            <param name="TeacherIDs">多筆教師記錄編琥</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHTeacher.Delete(TeacherIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHSCAttendRecord">
            <summary>
            學生修課資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSCAttendRecord.RequiredBy">
            <summary>
            校部訂
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSCAttendRecord.Required">
            <summary>
            取得必選修
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSCAttendRecord.OverrideRequired">
            <summary>
            是否覆蓋課程的必選修資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSCAttendRecord.OverrideRequiredBy">
            <summary>
            取得，指出是否覆蓋課程的校部訂資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSCAttendRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSCAttendRecord.Course">
            <summary>
            所屬課程
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHDepartmentRecord">
            <summary>
            科別資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHDepartmentRecord.#ctor">
            <summary>
            無參數建構式
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHDepartmentRecord.#ctor(System.Xml.XmlElement)">
            <summary>
            XML參數建構式
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:SHSchool.Data.SHDepartmentRecord.#ctor(System.Data.DataRow)">
            <summary>
            DataRow參數建構式
            </summary>
            <param name="Row"></param>
        </member>
        <member name="M:SHSchool.Data.SHDepartmentRecord.Load(System.Xml.XmlElement)">
            <summary>
            從XML載入設定值
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:SHSchool.Data.SHDepartmentRecord.Load(System.Data.DataRow)">
            <summary>
            從DataRow載入設定值
            </summary>
            <param name="row"></param>
        </member>
        <member name="P:SHSchool.Data.SHDepartmentRecord.ID">
            <summary>
            系統編號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHDepartmentRecord.Code">
            <summary>
            科別代碼
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHDepartmentRecord.Name">
            <summary>
            科別名稱，根據完整名稱解析出的科別名稱，例如『綜合高中科:資訊應用學程-94』會解析出『綜合高中科』；只可讀取。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHDepartmentRecord.FullName">
            <summary>
            資料庫中使用者輸入的原始科別名稱，可讀寫。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHDepartmentRecord.SubDepartment">
            <summary>
            學程名稱，根據完整名稱解析出的科別名稱，例如『綜合高中科:資訊應用學程-94』會解析出『資訊應用學程-94』；只可讀取。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHDepartmentRecord.RefTeacherID">
            <summary>
            科主任，教師系統編號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHDepartmentRecord.Teacher">
            <summary>
            科主任教師記錄物件
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHTCInstruct">
            <summary>
            教師教授課程類別，提供方法用來取得、新增、修改及刪除教師教授課程資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHTCInstruct.SelectAll">
            <summary>
            取得所有教師教授課程列表。
            </summary>
            <returns>List&lt;SHTCInstructRecord&gt;，代表多筆教師教授課程記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHTCInstructRecord&gt; records = SHTCInstruct.SelectAll();
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTCInstruct.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆教師教授課程編號取得教師教授課程列表。
            </summary>
            <param name="TCInstructIDs">多筆教師教授課程編號</param>
            <returns>List&lt;SHTCInstructRecord&gt;，代表多筆教師教授課程記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHTCInstructRecord&gt; records = SHTCInstruct.SelectByIDs(TCInstructIDs);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTCInstruct.SelectByTeacherIDAndCourseID(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆教師教授課程編號及課程編號取得教師教授課程列表。
            </summary>
            <param name="CourseIDs">多筆課程編號</param>
            <param name="TeacherIDs">多筆教師編號</param>
            <returns>List&lt;SHTCInstructRecord&gt;，代表多筆教師教授課程記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHTCInstructRecord&gt; records = SHTCInstruct.SelectByTeacherIDAndCourseID(TeacherIDs,CourseIDs);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTCInstruct.Insert(SHSchool.Data.SHTCInstructRecord)">
            <summary>
            新增單筆教師教授課程記錄
            </summary>
            <param name="TCInstructRecord">教師教授課程記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
            </example>
        </member>
        <!-- 忽略成員 "M:SHSchool.Data.SHTCInstruct.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHTCInstructRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:SHSchool.Data.SHTCInstruct.Update(SHSchool.Data.SHTCInstructRecord)">
            <summary>
            更新單筆教師教授課程記錄
            </summary>
            <param name="TCInstructRecord">教師教授課程記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTCInstruct.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHTCInstructRecord})">
            <summary>
            更新多筆教師教授課程記錄
            </summary>
            <param name="TCInstructRecords">多筆教師教授課程記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTCInstruct.Delete(SHSchool.Data.SHTCInstructRecord)">
            <summary>
            刪除單筆教師教授課程記錄
            </summary>
            <param name="TCInstructRecord">教師教授課程記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.TCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTCInstruct.Delete(System.String)">
            <summary>
            刪除單筆教師教授課程記錄
            </summary>
            <param name="TCInstructID">教師教授課程編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTCInstruct.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHTCInstructRecord})">
            <summary>
            刪除多筆教師教授課程記錄
            </summary>
            <param name="TCInstructRecords">多筆教師教授課程記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHTCInstruct.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆教師教授課程記錄
            </summary>
            <param name="TCInstructIDs">多筆教師教授課程編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:SHSchool.Data.SHSchoolInfo">
            <summary>
            提供學校相關資訊。
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHMerit">
            <summary>
            學生獎勵類別，提供方法用來取得、新增、修改及刪除學生獎勵資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHMerit.SelectAll">
            <summary>
            取得所有學生獎勵記錄物件列表。
            </summary>
            <returns>List&lt;SHMeritRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHMeritRecord&gt; records = SHMerit.SelectAll();
                
                foreach(SHMeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHMerit.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            根據條件取得獎勵紀錄列表 
            </summary>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">開始時間</param>
            <param name="EndDate">結束時間</param>
            <param name="StartRegisterDate">開始登錄時間</param>
            <param name="EndRegisterDate">結束登錄時間</param>
            <param name="SchoolYears">學年度</param>
            <param name="Semesters">學期</param>
            <returns>List&lt;SHMeritRecord&gt;，多筆獎勵紀錄物件列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHMerit.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{K12.Data.SchoolYearSemester})">
            <summary>
            根據條件取得獎勵紀錄列表
            </summary>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">開始時間</param>
            <param name="EndDate">結束時間</param>
            <param name="StartRegisterDate">開始登錄時間</param>
            <param name="EndRegisterDate">結束登錄時間</param>
            <param name="SchoolYears">學年度列表</param>
            <param name="Semesters">學期列表</param>
            <param name="SchoolYearSemesters">學年度學期列表</param>
            <returns>List&lt;SHMeritRecord&gt;，多筆獎勵紀錄物件列表</returns>
        </member>
        <member name="M:SHSchool.Data.SHMerit.SelectBySchoolYearAndSemester(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據單筆學生編號、學年度及學期取得學生獎勵記錄物件列表。
            </summary>
            <param name="StudentID">單筆學生編號</param>
            <param name="SchoolYear">學年度，傳入null取得所有學年度資料</param>
            <param name="Semester">學期，傳入null取得所有學期資料</param>
            <returns>List&lt;SHMeritRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHMeritRecord&gt; records = SHMerit.SelectBySchoolYearAndSemester(StudentID,School,Semester);
                
                foreach(SHMeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHMerit.SelectBySchoolYearAndSemester(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據多筆學生編號、學年度及學期取得學生獎勵記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度的資料</param>
            <param name="Semester">學期，傳入null代表取得所有學年度的資料</param>
            <returns>List&lt;SHMeritRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHMeritRecord&gt; records = SHMerit.SelectBySchoolYearAndSemester(StudentIDs,School,Semester);
                
                foreach(SHMeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHMerit.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生獎勵記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;SHMeritRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHMeritRecord&gt; records = SHMerit.SelectByStudentIDs(StudentIDs);
                
                foreach(SHMeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHMerit.SelectByRegisterDate(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            根據多筆學生編號及登錄日期取得學生獎勵記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="StartRegisterDate">登錄開始日期</param>
            <param name="EndRegisterDate">登錄結束日期</param>
            <returns>List&lt;SHMeritRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHMeritRecord&gt; records = SHMerit.SelectByRegisterDate(StudentIDs,StartRegisterDate,EndRegisterDate);
                
                foreach(SHMeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.若是StartRegisterDate傳入null，則會傳回EndRegisterDate之前的資料。
            2.若是EndRegisterDate傳入null，則會傳回StartRegisterDate之後的資料。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHMerit.SelectByOccurDate(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            根據多筆學生編號及發生日期取得學生獎勵記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="StartOccurDate">發生開始日期</param>
            <param name="EndOccurDate">發生結束日期</param>
            <returns>List&lt;SHMeritRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHMeritRecord&gt; records = SHMerit.SelectByOccurDate(StudentIDs,StartOccurDate,EndOccurDate);
                
                foreach(SHMeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.若是StartOccurDate傳入null，則會傳回EndOccurDate之前的資料。
            2.若是EndOccurDate傳入null，則會傳回StartOccurDate之後的資料。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHMerit.Insert(SHSchool.Data.SHMeritRecord)">
            <summary>
            新增單筆學生獎勵記錄
            </summary>
            <param name="MeritRecord">學生獎勵記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHMeritRecord newrecord = new SHMeritRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    strng NewID = SHMerit.Insert(newrecord)
                    MeritRecord record = SHMerit.SelectByID(NewID);
                    System.Console.Writeln(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為學生記錄編號（RefStudentID）、學年度（SchoolYear）、學期（Semester）、缺曠日期（OccurDate）。
            </remarks>
        </member>
        <!-- 忽略成員 "M:SHSchool.Data.SHMerit.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHMeritRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:SHSchool.Data.SHMerit.Update(SHSchool.Data.SHMeritRecord)">
            <summary>
            更新單筆學生獎勵記錄
            </summary>
            <param name="MeritRecord">學生獎勵記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHMeritRecord record = SHMerit.SelectByStudentIDs(StudentIDs)[0];
                record.OccurDate = DateTime.Today;
                int UpdateCount = SHMerit.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHMerit.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHMeritRecord})">
            <summary>
            更新多筆學生獎勵記錄
            </summary>
            <param name="MeritRecords">多筆學生獎勵記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHMeritRecord record = SHMerit.SelectByStudentIDs(StudentIDs)[0];
                record.OccurDate = DateTime.Today;
                List&lt;SHMeritRecord&gt; records = new List&lt;SHMeritRecord&gt;();
                records.Add(record);
                int UpdateCount = Merit.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHMerit.Delete(SHSchool.Data.SHMeritRecord)">
            <summary>
            刪除單筆學生獎勵記錄
            </summary>
            <param name="MeritRecord">學生獎勵記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHMeritRecord&gt; records = SHMerit.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = SHMerit.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHMerit.Delete(System.String)">
            <summary>
            刪除單筆學生獎勵記錄
            </summary>
            <param name="MeritID">學生獎勵記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHMerit.Delete(MeritID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHMerit.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHMeritRecord})">
            <summary>
            刪除多筆學生獎勵記錄
            </summary>
            <param name="MeritRecords">多筆學生獎勵記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHMeritRecord&gt; records = SHMerit.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = SHMerit.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHMerit.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生獎勵記錄
            </summary>
            <param name="MeritIDs">多筆學生獎勵記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHMerit.Delete(MeritIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHDiscipline">
            <summary>
            學生獎懲類別，提供方法用來取得、新增、修改及刪除學生獎懲資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHDiscipline.SelectAll">
            <summary>
            取得所有學生獎懲記錄物件列表。
            </summary>
            <returns>List&lt;SHDisciplineRecord&gt;，代表多筆學生獎懲記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHDisciplineRecord&gt; records = SHDisciplineRecord.SelectAll();
                
                foreach(SHDisciplineRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDiscipline.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生獎懲記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;SHDisciplineRecord&gt;，代表多筆學生獎懲記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHDisciplineRecord&gt; records = SHDiscipline.SelectByStudentIDs(StudentIDs);
                
                foreach(SHDisciplineRecord record in records)
                    Console.WrlteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDiscipline.SelectByRegisterDate(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            根據多筆學生編號及登錄日期取得學生獎懲記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="StartRegisterDate">登錄開始日期</param>
            <param name="EndRegisterDate">登錄結束日期</param>
            <returns>List&lt;SHDisciplineRecord&gt;，代表多筆學生獎懲記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHDisciplineRecord&gt; records = SHDiscipline.SelectRegisterDate(StudentIDs,StartRegisterDate,EndRegisterDate);
                
                foreach(SHDisciplineRecord record in records)
                    Console.WrlteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDiscipline.SelectByOccurDate(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            根據多筆學生編號及發生日期取得學生獎懲記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="StartOccurDate">發生開始日期</param>
            <param name="EndOccurDate">發生結束日期</param>
            <returns>List&lt;SHDisciplineRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHDisciplineRecord&gt; records = SHDiscipline.SelectByOccurDate(StudentIDs,StartOccurDate,EndOccurDate);
                
                foreach(SHDisciplineRecord record in records)
                    Console.WrlteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDiscipline.Insert(SHSchool.Data.SHDisciplineRecord)">
            <summary>
            新增單筆學生獎懲記錄
            </summary>
            <param name="DisciplineRecord">學生獎懲記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHDisciplineRecord newrecord = new SHDisciplineRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    strng NewID = SHDiscipline.Insert(newrecord)
                    DisciplineRecord record = SHDiscipline.SelectByID(NewID);
                    System.Console.Writeln(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為學生記錄編號（RefStudentID）、學年度（SchoolYear）、學期（Semester）、缺曠日期（OccurDate）。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHDiscipline.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHDisciplineRecord})">
            <summary>
            新增多筆學生獎懲記錄
            </summary>
            <param name="DisciplineRecords">多筆學生獎懲記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHDisciplineRecord record = new SHDisciplineRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    
                    List&lt;SHDisciplineRecord&gt; records = new List&lt;SHDisciplineRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = SHDiscipline.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHDiscipline.Update(SHSchool.Data.SHDisciplineRecord)">
            <summary>
            更新單筆學生獎懲記錄
            </summary>
            <param name="DisciplineRecord">學生獎懲記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHDisciplineRecord record = SHDiscipline.SelectByStudentIDs(StudentIDs)[0];
                record.OccurDate = DateTime.Today;
                int UpdateCount = SHDiscipline.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDiscipline.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHDisciplineRecord})">
            <summary>
            更新多筆學生獎懲記錄
            </summary>
            <param name="DisciplineRecords">多筆學生獎懲記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHDisciplineRecord record = SHDiscipline.SelectByStudentIDs(StudentIDs)[0];
                record.OccurDate = DateTime.Today;
                List&lt;SHDisciplineRecord&gt; records = new List&lt;SHDisciplineRecord&gt;();
                records.Add(record);
                int UpdateCount = SHDiscipline.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDiscipline.Delete(SHSchool.Data.SHDisciplineRecord)">
            <summary>
            刪除單筆學生獎懲記錄
            </summary>
            <param name="DisciplineRecord">學生獎懲記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHDisciplineRecord&gt; records = SHDiscipline.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = Discipline.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDiscipline.Delete(System.String)">
            <summary>
            刪除單筆學生獎懲記錄
            </summary>
            <param name="DisciplineID">學生獎懲記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHDiscipline.Delete(DisciplineID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDiscipline.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHDisciplineRecord})">
            <summary>
            刪除多筆學生獎懲記錄
            </summary>
            <param name="DisciplineRecords">多筆學生獎懲記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHDisciplineRecord&gt; records = SHDiscipline.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = Discipline.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHDiscipline.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生獎懲記錄
            </summary>
            <param name="DisciplineIDs">多筆學生獎懲記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHDiscipline.Delete(DisciplineIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHSCETakeRecord">
            <summary>
            學生期中成績資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSCETakeRecord.Score">
            <summary>
            評量成績
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSCETakeRecord.Text">
            <summary>
            文字評量
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSCETakeRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSCETakeRecord.SCAttend">
            <summary>
            所屬學生修課
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSCETakeRecord.Exam">
            <summary>
            所屬試別設定
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSCETakeRecord.Course">
            <summary>
            所屬課程
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHCourseTag">
            <summary>
            課程標籤類別，提供方法用來取得、新增、修改及刪除課程標籤資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHCourseTag.SelectAll">
            <summary>
            取得所有課程標籤列表。
            </summary>
            <returns>List&lt;SHCourseTagRecord&gt;，代表多筆課程標籤物件。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHCourseTagRecord&gt; records = SHCourseTag.SelectAll();
                    foreach(SHCourseTagRecord record in records)
                        System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourseTag.SelectByCourseID(System.String)">
            <summary>
            根據單筆課程編號取得課程標籤列表。
            </summary>
            <param name="CourseID">課程編號</param>
            <returns>List&lt;SHCourseTagRecord&gt;，代表多筆課程標籤物件。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHCourseTagRecord&gt; records = SHCourseTag.SelectByCourseID(CourseID);
                  
                  foreach(SHCourseTagRecord record in records)
                      System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourseTag.SelectByCourseIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆課程編號取得課程標籤列表。
            </summary>
            <param name="CourseIDs">多筆課程編號</param>
            <returns>List&lt;SHCourseTagRecord&gt;，代表多筆課程標籤物件。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHCourseTagRecord&gt; records = SHCourseTag.SelectByCourseIDs(CourseIDs);
                    
                    forech(SHCourseTagRecord record in records)
                        System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourseTag.Insert(SHSchool.Data.SHCourseTagRecord)">
            <summary>
            新增單筆課程標籤記錄
            </summary>
            <param name="CourseTagRecord">課程標籤記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
               <code>
                SHCourseTagRecord  record = new SHCourseTagRecord(CourseID, TagConfigID); 
                string NewID = SHCourseTag.Insert(record);  
               </code>
            </example>
            <remarks>
            1.新增傳入的參數為課程編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks> 
        </member>
        <member name="M:SHSchool.Data.SHCourseTag.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHCourseTagRecord})">
            <summary>
            新增多筆課程標籤記錄
            </summary>
            <param name="CourseTagRecords">多筆課程記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHCourseTagRecord record = new SHCourseTagRecord(CourseID, TagConfigID); 
                List&lt;SHCourseTagRecord&gt; records = new List&lt;SHCourseTagRecord&gt;();
                records.Add(record);
                List&lt;string&gt; NewIDs = SHCourseTag.Insert(records);  
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為課程編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks>        
        </member>
        <member name="M:SHSchool.Data.SHCourseTag.Update(SHSchool.Data.SHCourseTagRecord)">
            <summary>
            更新單筆課程標籤記錄
            </summary>
            <param name="CourseTagRecord">課程標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHCourseTagRecord&gt; records = SHCourseTag.SelectByCourseID(CourseID);
                    records[0].RefEntityID = CourseID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = SHCourseTag.Update(record[0]);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHCourseTag.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHCourseTagRecord})">
            <summary>
            更新多筆課程標籤記錄
            </summary>
            <param name="CourseTagRecords">多筆課程標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHCourseTagRecord&gt; records = SHCourseTag.SelectByCourseID(CourseID);
                    records[0].RefEntityID = CourseID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = SHCourseTag.Update(records);
                </code>
            </example>
            <remarks>
            1.更新的欄位值只有CourseID及TagConfigID，其它為唯讀欄位。
            2.傳回值為成功更新的筆數。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourseTag.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHCourseTagRecord})">
            <summary>
            刪除多筆課程標籤記錄
            </summary>
            <param name="CourseTagRecords">多筆班級課程記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHCourseTagRecord&gt; records = SHCourseTag.SelectByCourseID(CourseID);
                    int DeleteCount = SHCourseTag.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHCourseTag.Delete(SHSchool.Data.SHCourseTagRecord)">
            <summary>
            刪除單筆課程標籤記錄
            </summary>
            <param name="CourseTagRecord">課程標籤記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHCourseTagRecord&gt; records = SHCourseTag.SelectByCourseID(CourseID);
                    int DeleteCount = SHCourseTag.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHUpdateRecordBatch">
            <summary>
            異動名冊記錄類別，提供方法用來取得、新增、修改及刪除異動名冊記錄物件
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecordBatch.SelectAll">
            <summary>
            取得所有異動名冊記錄列表。
            </summary>
            <returns>List&lt;SHUpdateRecordBatchRecord&gt;，代表多筆異動名冊記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHUpdateRecordBatchRecord&gt; records = SHUpdateRecordBatch.SelectAll();
                
                foreach(SHUpdateRecordBatchRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecordBatch.SelectByID(System.String)">
            <summary>
            根據異動名冊記錄編號取得異動名冊記錄物件。
            </summary>
            <param name="UpdateRecordBatchID">異動名冊記錄編號</param>
            <returns>UpdateRecordBatchRecord，代表單筆異動名冊記錄編號。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHUpdateRecordBatchRecord record = SHUpdateRecordBatch.SelectByID("15");
                
                Console.WrlteLine(record.Name);
                </code>
            </example>
            <remarks>若是UpdateRecordBatchID不存在則會傳回null。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecordBatch.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據異動名冊記錄編號取得異動名冊記錄物件列表。
            </summary>
            <param name="UpdateRecordBatchIDs">多筆異動名冊記錄編號。</param>
            <returns>List&lt;SHUpdateRecordBatchRecord&gt;，代表多筆異動名冊記錄物件。</returns>
            <example>
                <code>
                List&lt;SHUpdateRecordBatchRecord&gt; records = SHUpdateRecordBatch.SelectByIDs(UpdateRecordBatchIDs);
                
                foreach(SHUpdateRecordBatchRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecordBatch.SelectBySchoolYearAndSemester(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據學年度及學期取得異動名冊記錄物件列表。
            </summary>
            <param name="SchoolYear">學年度，若是傳入null則會傳回所有學年度資料。</param>
            <param name="Semester">學期，若是傳入null則會傳回所有學期資料。</param>
            <returns>List&lt;SHUpdateRecordBatchRecord&gt;，代表多筆異動名冊記錄物件。</returns>
            <example>
                <code>
                List&lt;SHUpdateRecordBatchRecord&gt; records = SHUpdateRecordBatch.SelectBySchoolYearAndSemester(UpdateRecordBatchIDs);
                
                foreach(SHUpdateRecordBatchRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
            <remarks>若是學年度及學期參數皆傳入null，則會傳回所有資料。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecordBatch.Insert(SHSchool.Data.SHUpdateRecordBatchRecord)">
            <summary>
            新增單筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchRecord">異動名冊記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="!:SHUpdateReocrdBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHUpdateRecordBatchRecord newrecord = new SHUpdateRecordBatchRecord();
                    newrecord.Name ="test";
                    newrecord.SchoolYear = 95;
                    newrecord.Semester = 1;
                    strng NewID = SHUpdateRecordBatch.Insert(newrecord)
                    SHUpdateRecordBatchRecord record = SHUpdateRecordBatch.SelectByID(NewID);
                    System.Console.Writeln(record.Name);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為異動名冊名稱、學年度及學期。
            </remarks>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecordBatch.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHUpdateRecordBatchRecord})">
            <summary>
            新增多筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchRecords">多筆異動名冊記錄</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="!:SHUpdateReocrdBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHUpdateRecordBatchRecord record = new SHUpdateRecordBatchRecord();
                    
                    record.Name ="新生異動名冊";
                    record.SchoolYear = 96;
                    record.Semester = 1;
                    
                    List&lt;SHUpdateRecordBatchRecord&gt; records = new List&lt;SHUpdateRecordBatchRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = SHUpdateRecordBatch.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecordBatch.Update(SHSchool.Data.SHUpdateRecordBatchRecord)">
            <summary>
            更新單筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchRecord">異動名冊記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHUpdateRecordBatchRecord record = SHUpdateRecordBatch.SelectByID(UpdateRecordBatchID);
                record.Name = "轉入異動名冊";
                int UpdateCount = SHUpdateRecordBatch.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecordBatch.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHUpdateRecordBatchRecord})">
            <summary>
            更新多筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchRecords">多筆異動名冊記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHUpdateRecordBatchRecord record = SHUpdateRecordBatch.SelectByID(UpdateRecordBatchID);
                record.Name = "畢業異動名冊";
                List&lt;SHUpdateRecordBatchRecord&gt; records = new List&lt;SHUpdateRecordBatchRecord&gt;();
                records.Add(record);
                int UpdateCount = SHUpdateRecordBatch.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecordBatch.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHUpdateRecordBatchRecord})">
            <summary>
            刪除多筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchRecords">多筆異動名冊記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHUpdateRecordBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;SHUpdateRecordBatchRecord&gt; records = SHUpdateRecordBatch.SelectByIDs(UpdateRecordIDs);
                  int DeleteCount = SHUpdateRecordBatch.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecordBatch.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchIDs">多筆異動名冊記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
               <code>
               int DeleteCount = SHUpdateRecordBatch.Delete(UpdateRecordBatchIDs);
               </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecordBatch.Delete(SHSchool.Data.SHUpdateRecordBatchRecord)">
            <summary>
            刪除單筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchRecord">單筆異動名冊記錄物</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  SHUpdateRecordBatchRecord&gt; record = SHUpdateRecordBatch.SelectByID(UpdateRecordBatchID);
                  int DeleteCount = SHUpdateRecordBatch.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHUpdateRecordBatch.Delete(System.String)">
            <summary>
            刪除單筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchID">單筆異動名冊記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = SHUpdateRecordBatch.Delete(UpdateRecordID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHTeacherRecord">
            <summary>
            教師資訊
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHPhone">
            <summary>
            學生電話類別，提供方法用來取得及修改學生電話資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHPhone.SelectAll">
            <summary>
            取得所有學生電話記錄物件。
            </summary>
            <returns>List&lt;SHPhoneRecord&gt;，代表多筆學生電話記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHPhoneRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHPhoneRecord&gt; records = SHPhone.SelectAll();
                
                foreach(SHPhoneRecord record in records)
                    Console.WrlteLine(record.Permanent);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHPhone.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生記錄編號取得學生電話記錄物件。
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>SHPhoneRecord，代表學生電話記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHPhoneRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHPhoneRecord record = SHPhone.SelectByStudentID(StudentID);
                
               if (record != null)
                   System.Console.WriteLine(record.Permanent);
                </code>
            </example>
            <remarks>若是Student不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHPhone.SelectByStudent(SHSchool.Data.SHStudentRecord)">
            <summary>
            根據單筆學生記錄物件取得學生電話記錄物件。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>SHPhoneRecord，代表學生電話記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <seealso cref="T:SHSchool.Data.SHPhoneRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHPhoneRecord record = SHPhone.SelectByStudent(Student);
                
                 if (record != null)
                   System.Console.WriteLine(record.Permanent);
                </code>
            </example>
            <remarks>若是Student不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHPhone.SelectByStudents(System.Collections.Generic.List{SHSchool.Data.SHStudentRecord})">
            <summary>
            根據多筆學生記錄物件取得學生電話記錄物件列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;SHPhoneRecord&gt;，代表多筆學生電話記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHPhoneRecord"/>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHPhoneRecord&gt; records = SHPhone.SelectByStudents(Students);
                
                foreach(SHPhoneRecord record in records)
                    Console.WrlteLine(record.Permanent);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHPhone.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生記錄編號取得學生電話記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;SHPhoneRecord&gt;，代表多筆學生電話記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHPhoneRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHPhoneRecord&gt; records = SHPhone.SelectByStudentIDs(StudentIDs);
                
                foreach(SHPhoneRecord record in records)
                    Console.WrlteLine(record.Permanent);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHPhone.Update(SHSchool.Data.SHPhoneRecord)">
            <summary>
            更新單筆學生電話記錄
            </summary>
            <param name="PhoneRecord">學生電話記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHPhoneRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHPhoneRecord record = SHPhone.SelectByStudentID(StudentID);
                record.Permanent = (new System.Random()).NextDouble().ToString();
                int UpdateCount = SHPhone.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHPhone.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHPhoneRecord})">
            <summary>
            更新多筆學生電話記錄
            </summary>
            <param name="PhoneRecords">多筆學生電話記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHPhoneRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHPhoneRecord record = SHPhone.SelectByStudentID(StudentID);
                record.Permanent = (new System.Random()).NextDouble().ToString();
                List&lt;SHPhoneRecord&gt; records = new List&lt;SHPhoneRecord&gt;();
                records.Add(record);
                int UpdateCount = SHPhone.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHAddressRecord">
            <summary>
            學生地址資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHAddressRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHBeforeEnrollment">
            <summary>
            學生前級畢業資訊類別，提供方法用來取得及修改學生前級畢業資訊。
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHBeforeEnrollment.SelectAll">
            <summary>
            取得所有學生前級畢業資訊物件列表。
            </summary>
            <returns>List&lt;SHBeforeEnrollmentRecord&gt;，代表多筆學生前級畢業資訊物件。</returns>
            <seealso cref="T:SHSchool.Data.SHBeforeEnrollmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHBeforeEnrollmentRecord&gt; records = SHBeforeEnrollment.SelectAll();
                
                foreach(SHBeforeEnrollmentRecord record in records)
                    Console.WrlteLine(record.Reason);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHBeforeEnrollment.SelectByStudent(SHSchool.Data.SHStudentRecord)">
            <summary>
            根據單筆學生記錄物件取得學生前級畢業資訊物件。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>JHLeaveInfoRecord，代表學生前級畢業資訊物件。</returns>
            <seealso cref="!:JHStudentRecord"/>
            <seealso cref="T:SHSchool.Data.SHBeforeEnrollmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHBeforeEnrollmentRecord record = SHBeforeEnrollment.SelectByStudent(Student);
                
               if (record != null)
                   System.Console.WriteLine(record.Memo);
                </code>
            </example>
            <remarks>若是Student不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHBeforeEnrollment.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生記錄編號取得學生前級畢業資訊物件。
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>SHBeforeEnrollmentRecord，代表學生前級畢業資訊物件。</returns>
            <seealso cref="T:SHSchool.Data.SHBeforeEnrollmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHBeforeEnrollmentRecord record = SHBeforeEnrollment.SelectByStudentID(StudentID);
                
                if (record != null)
                   System.Console.WriteLine(record.Reason);
                </code>
            </example>
            <remarks>若是StudentID不則在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHBeforeEnrollment.SelectByStudents(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord})">
            <summary>
            根據多筆學生記錄物件取得學生前級畢業資訊物件列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;SHBeforeEnrollmentRecord&gt;，代表多筆學生前級畢業資訊物件。</returns>
            <seealso cref="T:SHSchool.Data.SHBeforeEnrollmentRecord"/>
            <seealso cref="!:JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHBeforeEnrollmentRecord&gt; records = SHBeforeEnrollment.SelectByStudents(Students);
                
                foreach(SHBeforeEnrollmentRecord record in records)
                    Console.WrlteLine(record.Reason);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHBeforeEnrollment.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生記錄編號取得學生前級畢業資訊物件列表。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;SHBeforeEnrollmentRecord&gt;，代表多筆學生前級畢業資訊物件。</returns>
            <seealso cref="T:SHSchool.Data.SHBeforeEnrollmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHBeforeEnrollmentRecord&gt; records = SHBeforeEnrollment.SelectByStudentIDs(StudentIDs);
                
                foreach(SHBeforeEnrollmentRecord record in records)
                    Console.WrlteLine(record.Reason);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHBeforeEnrollment.Update(SHSchool.Data.SHBeforeEnrollmentRecord)">
            <summary>
            更新單筆學生離校資訊
            </summary>
            <param name="BeforeEnrollmentRecord">學生前級畢業資訊物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHBeforeEnrollmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHBeforeEnrollmentRecord record = SHBeforeEnrollment.SelectByStudentID(StudentID);
                record.Reason = (new System.Random()).NextDouble().ToString();
                int UpdateCount = SHBeforeEnrollment.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHBeforeEnrollment.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHBeforeEnrollmentRecord})">
            <summary>
            更新多筆學生離校資訊
            </summary>
            <param name="BeforeEnrollmentRecords">多筆學生離校資訊物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHBeforeEnrollmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHBeforeEnrollmentRecord record = SHBeforeEnrollment.SelectByStudentID(StudentID);
                record.Memo = (new System.Random()).NextDouble().ToString();
                List&lt;SHBeforeEnrollment&gt; records = new List&lt;SHBeforeEnrollment&gt;();
                records.Add(record);
                int UpdateCount = SHBeforeEnrollment.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHSemesterEntryScore">
            <summary>
            學生學期分項成績類別，提供方法用來取得、新增、修改及刪除學生學期分項成績資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSemesterEntryScore.Select(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.Collections.Generic.IEnumerable{K12.Data.SchoolYearSemester})">
            <summary>
            根據條件取得學生學期分項成績物件紀錄列表
            </summary>
            <param name="IDs">學生學期分項成績編號</param>
            <param name="StudentIDs">學生編號列表</param>
            <param name="EntryGroup">分項群組</param>
            <param name="SchoolYearSemesters">學年度學期紀錄物件列表</param>
            <returns>List&lt;SHSemesterEntryScoreRecord&gt;，代表多筆學生學期分項紀錄物件。</returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterEntryScore.Select(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.Collections.Generic.IEnumerable{K12.Data.SchoolYearSemester},System.Boolean)">
            <summary>
            根據條件取得學生學期分項成績物件紀錄列表
            </summary>
            <param name="IDs">學生學期分項成績編號</param>
            <param name="StudentIDs">學生編號列表</param>
            <param name="EntryGroup">分項群組</param>
            <param name="SchoolYearSemesters">學年度學期紀錄物件列表</param>
            <param name="FilterRepeat">是否過濾重讀</param>
            <returns>List&lt;SHSemesterEntryScoreRecord&gt;，代表多筆學生學期分項紀錄物件。</returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterEntryScore.Delete(SHSchool.Data.SHSemesterEntryScoreRecord)">
            <summary>
            刪除單筆學生學期分項成績記錄
            </summary>
            <param name="SemesterEntryScoreRecord">學生學期分項成績記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHSemesterEntryScoreRecord"/>
            <exception cref="!:Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSemesterEntryScore.Delete(System.String)">
            <summary>
            刪除單筆學生學期分項成績記錄
            </summary>
            <param name="SemesterEntryScoreID">學生學期分項成績編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="!:Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSemesterEntryScore.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHSemesterEntryScoreRecord})">
            <summary>
            刪除多筆學生學期成績記錄
            </summary>
            <param name="SemesterEntryScoreRecords">多筆學生學期成績記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="!:SemesterEntryScoreRecord"/>
            <exception cref="!:Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSemesterEntryScore.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生學期分項成績記錄
            </summary>
            <param name="SemesterEntryScoreIDs">多筆學生學期分項成績編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="!:Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:SHSchool.Data.SHSchoolYearEntryScoreRecord">
            <summary>
            學生學年分項成績資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearEntryScoreRecord.Load(System.Xml.XmlElement)">
             <summary>
             用XML參數載入資料
             <![CDATA[
                <SchoolYearEntryScore ID="11812">
                <RefStudentId>49614</RefStudentId>
                <SchoolYear>96</SchoolYear>
                <GradeYear>3</GradeYear>
                <EntryGroup>學習</EntryGroup>
                <ScoreInfo>
                    <SchoolYearEntryScore>
                        <Entry 分項="學業" 成績="86.1" />
                    </SchoolYearEntryScore>
                </ScoreInfo>
                <ClassRating>
                    <Rating 範圍人數="52">
                        <Item 分項="學業" 成績="86.1" 成績人數="52" 排名="10" />
                    </Rating>
                </ClassRating>
                <DeptRating>
                    <Rating 範圍人數="144">
                        <Item 分項="學業" 成績="86.1" 成績人數="144" 排名="24" />
                    </Rating>
                </DeptRating>
                <YearRating>
                    <Rating 範圍人數="1225">
                        <Item 分項="學業" 成績="86.1" 成績人數="828" 排名="85" />
                    </Rating>
                </YearRating>
            </SchoolYearEntryScore>
             ]]>
             </summary>
             <param name="element"></param>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.ID">
            <summary>
            系統編號
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.RefStudentID">
            <summary>
            所屬學生編號，必填
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.SchoolYear">
            <summary>
            學年度，必填
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.GradeYear">
            <summary>
            年級
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.Group">
            <summary>
            分項群組
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.GroupMainScore">
            <summary>
            根據分項群組取得對應的分項成績，若是分項群組為『學習』，則取得『學業』分項成績；若是分項群組為『行為』，則取得『德行』分項成績。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.GroupMainClassRating">
            <summary>
            根據分項群組取得對應的分項班級排名。
            若是分項群組為『學習』，則取得『學業』分項班級排名。
            若是分項群組為『行為』，則取得『德行』分項班級排名。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.GroupYearRating">
            <summary>
            根據分項群組取得對應的分項年級排名。
            若是分項群組為『學習』，則取得『學業』分項年級排名。
            若是分項群組為『行為』，則取得『德行』分項年級排名。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.GroupDeptRating">
            <summary>
            根據分項群組取得對應的分項科排名。
            若是分項群組為『學習』，則取得『學業』分項科排名。
            若是分項群組為『行為』，則取得『德行』分項科排名。
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.Scores">
            <summary>
            分項成績
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.ClassRating">
            <summary>
            班級排名
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.YearRating">
            <summary>
            年級排名
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSchoolYearEntryScoreRecord.DeptRating">
            <summary>
            科排名
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHSemesterHistoryRecord">
            <summary>
            學生學期歷程資訊
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHSemesterHistoryRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHSemesterHistory">
            <summary>
            學期歷程類別，提供方法用來取得及修改學期歷程資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSemesterHistory.SelectAllDetail">
            <summary>
            取得所有學生學期歷程細項列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:SHSchool.Data.SHSemesterHistory.SelectAll">
            <summary>
            取得所有學生學期歷程列表。
            </summary>
            <returns>List&lt;SHSemesterHistoryRecord&gt;，代表多筆學期歷程物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSemesterHistoryRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHSemesterHistoryRecord&gt; records = SHSemesterHistory.SelectAll();
                    
                    foreach(SHSemesterHistoryRecord record in records)
                        System.Console.Writeln(record.SchoolYear); 
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSemesterHistory.SelectByStudentID(System.String)">
            <summary>
            根據學生編號取得學期歷程。
            </summary>
            <param name="StudentID">學生編號</param>
            <returns>SHSemesterHistoryRecord，代表學期歷程物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSemesterHistoryRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHSemesterHistoryRecord record = SHSemesterHistory.SelectByStudentID(StudentID);
                
                if (record != null)
                {
                   System.Console.WriteLine(record.SchoolYear);
                   System.Console.WriteLine(record.Semester);
                }
                </code>
            </example>
            <remarks>若是StudentID不存在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHSemesterHistory.SelectByStudent(SHSchool.Data.SHStudentRecord)">
             <summary>
             根據學生物件取得學期歷程。
             </summary>
             <param name="Student">學生物件</param>
             <returns>SHSemesterHistoryRecord，代表學期歷程物件。</returns>
             <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
             <seealso cref="T:SHSchool.Data.SHSemesterHistoryRecord"/>
             <exception cref="T:System.Exception">
             </exception>
             <sample>
                 <code>
                 SHSemesterHistoryRecord record = SHSemesterHistory.SelectByStudent(Student);
                 
                 if (record != null)
                 {
                    System.Console.WriteLine(record.SchoolYear);
                    System.Console.WriteLine(record.Semester);
                 }
                 </code>
            </sample>
             <remarks>若是StudentID不存在則會傳回null</remarks>
        </member>
        <member name="M:SHSchool.Data.SHSemesterHistory.SelectByStudents(System.Collections.Generic.IEnumerable{SHSchool.Data.SHStudentRecord})">
            <summary>
            根據多筆學生物件取得學期歷程列表。
            </summary>
            <param name="Students">多筆學生物件</param>
            <returns>List&lt;SHSemesterHistoryRecord&gt;，代表多筆學期歷程物件。</returns>
            <seealso cref="T:SHSchool.Data.SHStudentRecord"/>
            <seealso cref="T:SHSchool.Data.SHSemesterHistoryRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHSemesterHistoryRecord&gt; records = SHSemesterHistory.SelectByStudents(Students);
                    
                    foreach(SHSemesterHistoryRecord record in records)
                        System.Console.Writeln(record.SchoolYear); 
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHSemesterHistory.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學期歷程列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;SHSemesterHistoryRecord&gt;，代表多筆學期歷程物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSemesterHistoryRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHSemesterHistoryRecord&gt; records = SHSemesterHistory.SelectByStudentIDs(StudentIDs);
                    
                    foreach(SHSemesterHistoryRecord record in records)
                        System.Console.Writeln(record.SchoolYear); 
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:SHSchool.Data.SHSemesterHistory.Update(SHSchool.Data.SHSemesterHistoryRecord)">
            <summary>
            更新單筆學期歷程記錄
            </summary>
            <param name="SemesterHistoryRecord">學期歷程記錄</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHSemesterHistoryRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHSemesterHistoryRecord record = SHSmesterHistory.SelectByStudentID(StudentID);
                record.SchoolYear = 100;
                int UpdateCount = SHSmesterHistory.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:SHSchool.Data.SHSemesterHistory.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHSemesterHistoryRecord})">
            <summary>
            更新多筆學期歷程記錄
            </summary>
            <param name="SemesterHistoryRecords">多筆學期歷程記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:SHSchool.Data.SHSemesterHistoryRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                SHSemesterHistoryRecord record = SHSemesterHistory.SelectByStudentID(StudentID);
                record.SchoolYear = 100;
                List&lt;SHSemesterHistoryRecord&gt; records = new List&lt;SHSemesterHistoryRecord&gt;();
                records.Add(record);
                int UpdateCount = SHSemesterHistory.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="T:SHSchool.Data.SHSCETake">
            <summary>
            學生期中成績類別，提供方法用來取得、新增、修改及刪除學生期中成績資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.SelectAll">
            <summary>
            取得所有學生期中成績列表。
            </summary>
            <returns>List&lt;SHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHSCETakeRecord&gt; records = SHSCETake.SelectAll();
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生期中成績編號取得學生期中成績列表。
            </summary>
            <param name="SCETakeIDs">多筆學生期中成績編號</param>
            <returns>List&lt;SHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHSCETakeRecord&gt; records = SHSCETake.SelectByIDs(SCETakeIDs);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.SelectByCourseAndExam(System.String,System.String)">
            <summary>
            根據課程編號及考試項目編號取得學生期中成績列表。
            </summary>
            <param name="CourseID">課程編號</param> 
            <param name="ExamID">考試項目編號</param>
            <returns>List&lt;SHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHSCETakeRecord&gt; records = SHSCETake.SelectByCourseAndExam(CourseID,ExamID);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.SelectByCourseAndExam(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            根據多筆課程編號及單筆考試項目編號取得學生期中成績列表。
            </summary>
            <param name="CourseIDs">多筆課程編號</param>
            <param name="ExamID">單筆考試項目編號</param>
            <returns>List&lt;SHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHSCETakeRecord&gt; records = SHSCETake.SelectByCourseAndExam(CourseIDs,ExamID);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.SelectByStudentAndCourse(System.String,System.String)">
            <summary>
            根據學生編號及課程編號取得學生期中成績列表。
            </summary>
            <param name="CourseID">課程編號</param> 
            <param name="StudentID">學生編號</param>
            <returns>List&lt;SHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SCETakeRecord&gt; records = SHSCETake.SelectByStudentAndCourse(StudentID,CourseID);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生編號取得學生期中成績列表。
            </summary>
            <param name="StudentID">單筆學生編號</param>
            <returns>List&lt;SHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHSCETakeRecord&gt; records = SHSCETake.SelectByStudentID(StudentID);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生期中成績列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;SHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHSCETakeRecord&gt; records = SHSCETake.SelectByStudentID(StudentIDs);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.SelectByStudentAndCourse(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號及多筆課程編號取得學生期中成績列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="CourseIDs">多筆課程編號</param> 
            <returns>List&lt;SHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHSCETakeRecord&gt; records = SHSCETake.SelectByStudentAndCourse(StudentIDs,CourseIDs);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.Insert(SHSchool.Data.SHSCETakeRecord)">
            <summary>
            新增單筆學生期中成績記錄
            </summary>
            <param name="SCETakeRecord">學生期中成績記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:SHSchool.Data.SHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
            </example>
        </member>
        <!-- 忽略成員 "M:SHSchool.Data.SHSCETake.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHSCETakeRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:SHSchool.Data.SHSCETake.Update(SHSchool.Data.SHSCETakeRecord)">
            <summary>
            更新單筆學生期中成績記錄
            </summary>
            <param name="SCETakeRecord">學生期中成績記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:K12.Data.SCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHSCETakeRecord})">
            <summary>
            更新多筆學生期中成績記錄
            </summary>
            <param name="SCETakeRecords">多筆學生期中成績記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:K12.Data.SCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.Delete(SHSchool.Data.SHSCETakeRecord)">
            <summary>
            刪除單筆學生期中成績記錄
            </summary>
            <param name="SCETakeRecord">學生期中成績記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.SCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.Delete(System.String)">
            <summary>
            刪除單筆學生期中成績記錄
            </summary>
            <param name="SCETakeID">學生期中成績編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHSCETakeRecord})">
            <summary>
            刪除多筆學生期中成績記錄
            </summary>
            <param name="SCETakeRecords">多筆學生期中成績記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.SCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSCETake.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生期中成績記錄
            </summary>
            <param name="SCETakeIDs">多筆學生期中成績編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:SHSchool.Data.SHAssessmentSetup">
            <summary>
            評量設定類別，提供方法用來取得、新增、修改及刪除評量設定資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHAssessmentSetup.SelectAll">
            <summary>
            取得所有評量設定列表。
            </summary>
            <returns>List&lt;SHAssessmentSetupRecord&gt;，代表多筆評量設定記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHAssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHAssessmentSetupRecord&gt; records = SHAssessmentSetup.SelectAll();
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAssessmentSetup.SelectByID(System.String)">
            <summary>
            根據評量設定編號取得評量設定記錄物件。
            </summary>
            <param name="AssessmentSetupID">評量設定編號</param>
            <returns>SHAssessmentSetupRecord，代表評量設定記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHAssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHAssessmentSetupRecord&gt; records = SHAssessmentSetup.SelectByID(AssessmentSetupID);
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAssessmentSetup.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆評量設定編號取得評量設定列表。
            </summary>
            <param name="AssessmentSetupIDs">多筆評量設定編號</param>
            <returns>List&lt;SHAssessmentSetupRecord&gt;，代表多筆評量設定記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHAssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SHAssessmentSetupRecord&gt; records = SHAssessmentSetup.SelectByIDs(AssessmentSetupIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:SHSchool.Data.SHAssessmentSetup.Insert(SHSchool.Data.SHAssessmentSetupRecord)" 中格式錯誤的 XML 註解 -->
        <member name="M:SHSchool.Data.SHAssessmentSetup.Insert(System.Collections.Generic.IEnumerable{SHSchool.Data.SHAssessmentSetupRecord})">
            <summary>
            新增多筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecords">多筆評量設定記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:K12.Data.AssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAssessmentSetup.Update(SHSchool.Data.SHAssessmentSetupRecord)">
            <summary>
            更新單筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecord">評量設定記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:K12.Data.AssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAssessmentSetup.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHAssessmentSetupRecord})">
            <summary>
            更新多筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecords">多筆評量設定記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:K12.Data.AssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAssessmentSetup.Delete(SHSchool.Data.SHAssessmentSetupRecord)">
            <summary>
            刪除單筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecord">評量設定記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.AssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAssessmentSetup.Delete(System.String)">
            <summary>
            刪除單筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecordID">評量設定記錄編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAssessmentSetup.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHAssessmentSetupRecord})">
            <summary>
            刪除多筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecords">多筆評量設定記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.AssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHAssessmentSetup.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecordIDs">多筆評量設定記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:SHSchool.Data.SHMoralScoreCalcRuleRecord">
            <summary>
            德行成績計算規則
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHMoralScoreCalcRuleRecord.#ctor">
            <summary>
            預設建構式
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHMoralScoreCalcRuleRecord.#ctor(System.Xml.XmlElement)">
            <summary>
            
            </summary>
            <param name="Content">內容</param>
        </member>
        <member name="M:SHSchool.Data.SHMoralScoreCalcRuleRecord.Load(System.Xml.XmlElement)">
            <summary>
            從XML載入設定值
            <![CDATA[
            <MoralConductScoreCalcRule>
                   <PeriodAbsenceCalcRule NoAbsenceReward="3">
                       <Rule Absence="曠課" Aggregated="2" Noabsence="" Period="早修" Subtract="1" />
                       <Rule Absence="事假" Aggregated="40" Noabsence="" Period="早修" Subtract="1" />
                   </PeriodAbsenceCalcRule>
                   <BasicScore DecimalType="四捨五入" Decimals="1" NormalScore="80" Over100="以實際分數計" UltimateAdmonitionScore="60" />
                   <TeacherAppraise Range="7" />
                   <RewardCalcRule AwardA1="7" AwardB1="2" AwardB3="3" AwardC1="1" CalcCancel="False" FaultA1="7" FaultB1="2" FaultB3="3" FaultC1="1" />
               </MoralConductScoreCalcRule>
            ]]>
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:SHSchool.Data.SHMoralScoreCalcRuleRecord.Content">
            <summary>
            內容，必填
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHUpdateCodeMappingInfo">
            <summary>
            異動代碼對照表記錄物件
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHUpdateCodeMappingInfo.Load(System.Xml.XmlElement)">
            <summary>
            XML參數建構式
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:SHSchool.Data.SHUpdateCodeMappingInfo.Code">
            <summary>
            異動代碼
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateCodeMappingInfo.Description">
            <summary>
            異動原因及事項
            </summary>
        </member>
        <member name="P:SHSchool.Data.SHUpdateCodeMappingInfo.Type">
            <summary>
            異動分類
            </summary>
        </member>
        <member name="T:SHSchool.Data.SHSchoolYearScore">
            <summary>
            學生學年成績類別，提供方法用來取得、新增、修改及刪除學生學期成績資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearScore.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生學年科目成績列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;SHSchoolYearScoreRecord&gt;，代表多筆學生學年科目成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSchoolYearScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
               <code>
                List&lt;SHSchoolYearScoreRecord&gt; records = SHSchoolYearScoreRecord.SelectByStudentIDs(StudentIDs);
               </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearScore.SelectByStudentIDs``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生學年科目成績列表。
            </summary>
            <typeparam name="T">學生學年科目成績記錄物件型別</typeparam>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;SHSchoolYearScoreRecord&gt;，代表多筆學生學年科目成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHSchoolYearScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHSchoolYearScoreRecord&gt; records = SHSchoolYearScore.SelectByStudentIDs&lt;SHSchoolYearScoreRecord&gt;(StudentIDs);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearScore.Update(SHSchool.Data.SHSchoolYearScoreRecord)">
            <summary>
            更新單筆學生學年科目成績記錄
            </summary>
            <param name="SchoolYearScoreRecord">學生學年科目成績記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="!:SchoolYearScoreRecord"/>
            <example>
                
            </example>
        </member>
        <!-- 忽略成員 "M:SHSchool.Data.SHSchoolYearScore.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHSchoolYearScoreRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:SHSchool.Data.SHSchoolYearScore.Delete(SHSchool.Data.SHSchoolYearScoreRecord)">
            <summary>
            刪除單筆學生學年科目成績記錄
            </summary>
            <param name="SchoolYearScoreRecord">學生學年科目成績記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="!:SchoolYearScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearScore.Delete(System.String)">
            <summary>
            刪除單筆學生學年科目成績記錄
            </summary>
            <param name="SchoolYearScoreID">學生學年科目成績編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearScore.Delete(System.Collections.Generic.IEnumerable{SHSchool.Data.SHSchoolYearScoreRecord})">
            <summary>
            刪除多筆學生學年科目成績記錄
            </summary>
            <param name="SchoolYearSubjectScoreRecords">多筆學生學年科目成績記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="!:SchoolYearSubjectScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:SHSchool.Data.SHSchoolYearScore.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生學年科目成績記錄
            </summary>
            <param name="SchoolYearSubjectIDs">多筆學生學年科目成績編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:SHSchool.Data.SHGradScore">
            <summary>
            學生畢業成績類別，提供方法用來取得及修改學生畢業成績資訊
            </summary>
        </member>
        <member name="M:SHSchool.Data.SHGradScore.SelectAll">
            <summary>
            取得所有學生畢業成績項目列表。
            </summary>
            <returns>List&lt;SHGradScoreRecord&gt;，代表多筆學生畢業成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHGradScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHGradScoreRecord&gt; records = SHGradeScore.SelectAll();
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHGradScore.SelectAll``1">
            <summary>
            取得所有學生畢業成績項目列表。
            </summary>
            <returns>List&lt;SHGradScoreRecord&gt;，代表多筆學生畢業成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHGradScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;SHGradScoreRecord&gt; records = SHGradeScore.SelectAll();
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHGradScore.SelectByID(System.String)">
            <summary>
            根據單筆學生記錄編號取得學生畢業成績記錄物件。
            </summary>
            <param name="StudentID">單筆學生記錄編號</param>
            <returns>SHGradScoreRecord，代表單筆學生畢業成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHGradScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHGradScoreRecord record = SHGradeScore.SelectByID(StudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHGradScore.SelectByID``1(System.String)">
            <summary>
            根據單筆學生記錄編號取得學生畢業成績記錄物件。
            </summary>
            <param name="StudentID">單筆學生記錄編號</param>
            <returns>SHGradScoreRecord，代表單筆學生畢業成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHGradScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHGradScoreRecord record = SHGradeScore.SelectByID(StudentID);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHGradScore.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生記錄編號取得學生畢業成績記錄。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;SHGradScoreRecord&gt;，代表多筆學生畢業成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHGradScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHGradScoreRecord&gt; records = SHGradeScore.SelectByIDs(StudentIDs);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHGradScore.SelectByIDs``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生記錄編號取得學生畢業成績記錄。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;SHGradScoreRecord&gt;，代表多筆學生畢業成績記錄物件。</returns>
            <seealso cref="T:SHSchool.Data.SHGradScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;SHGradScoreRecord&gt; records = SHGradeScore.SelectByIDs(StudentIDs);
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHGradScore.Update(SHSchool.Data.SHGradScoreRecord)">
            <summary>
            更新單筆學生畢業成績記錄
            </summary>
            <param name="GradScoreRecord">學生畢業成績記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:K12.Data.GradScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                
                </code>
            </example>
        </member>
        <member name="M:SHSchool.Data.SHGradScore.Update(System.Collections.Generic.IEnumerable{SHSchool.Data.SHGradScoreRecord})">
            <summary>
            更新多筆學生畢業成績記錄
            </summary>
            <param name="GradScoreRecords">多筆學生畢業成績記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:K12.Data.GradScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                
                </code>
            </example>
        </member>
        <member name="T:SHSchool.Data.SHChineseEnglishSubjectMapping">
            <summary>
            科目中英文對照表
            </summary>
        </member>
    </members>
</doc>
